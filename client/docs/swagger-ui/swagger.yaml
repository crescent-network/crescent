swagger: '2.0'
info:
  title: Crescent REST and gRPC Gateway docs
  description: 'A REST interface for state queries, transactions'
  version: 5.0.0
paths:
  /crescent/farming/v1beta1/current_epoch_days:
    get:
      summary: CurrentEpochDays returns current epoch days.
      description: Returns the current epoch days
      operationId: CurrentEpochDays
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              current_epoch_days:
                type: integer
                format: int64
            description: >-
              QueryCurrentEpochDaysResponse is the response type for the
              Query/CurrentEpochDays RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/historical_rewards/{staking_coin_denom}':
    get:
      summary: >-
        HistoricalRewards returns HistoricalRewards records for a staking coin
        denom.
      description: Returns HistoricalRewards records for a staking coin denom
      operationId: HistoricalRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              historical_rewards:
                type: array
                items:
                  type: object
                  properties:
                    epoch:
                      type: string
                      format: uint64
                    cumulative_unit_rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryHistoricalRewardsResponse is the response type for the
              Query/HistoricalRewards RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: staking_coin_denom
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  /crescent/farming/v1beta1/params:
    get:
      summary: Params returns parameters of the farming module.
      description: Returns all parameters of the farming module.
      operationId: FarmingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  private_plan_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      private_plan_creation_fee specifies the fee for plan
                      creation

                      this fee prevents from spamming and is collected in the
                      community pool
                  next_epoch_days:
                    type: integer
                    format: int64
                    title: >-
                      next_epoch_days is the epoch length in number of days

                      it updates internal state called CurrentEpochDays that is
                      used to process

                      staking and reward distribution in end blocker
                  farming_fee_collector:
                    type: string
                    title: >-
                      farming_fee_collector is the module account address to
                      collect fees within the farming module
                  delayed_staking_gas_fee:
                    type: string
                    format: uint64
                    title: >-
                      delayed_staking_gas_fee is used to impose gas fee for the
                      delayed staking
                  max_num_private_plans:
                    type: integer
                    format: int64
                    title: >-
                      max_num_private_plans is the maximum number of active
                      private plans
                description: Params defines the set of params for the farming module.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
      externalDocs:
        description: Find out more about the params
        url: >-
          https://github.com/crescent-network/crescent/blob/main/x/farming/spec/07_params.md
  /crescent/farming/v1beta1/plans:
    get:
      summary: Plans returns all plans.
      description: Returns a list of all farming plans with pagination result.
      operationId: Plans
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plans:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
                title: plans are the existing plans
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryPlansResponse is the response type for the Query/Plans RPC
              method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: >-
                rpc error: code = InvalidArgument desc = invalid plan type
                PLAN_TYPE
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 13
              message: 'rpc error: code = Internal desc = error'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: type
          in: query
          required: false
          type: string
        - name: farming_pool_address
          in: query
          required: false
          type: string
        - name: termination_address
          in: query
          required: false
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
        - name: terminated
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/plans/{plan_id}':
    get:
      summary: Plan returns a specific plan.
      description: Returns the farming plan that corresponds to the plan_id.
      operationId: Plan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plan:
                type: object
                properties:
                  type_url:
                    type: string
                    description: >-
                      A URL/resource name that uniquely identifies the type of
                      the serialized

                      protocol buffer message. This string must contain at least

                      one "/" character. The last segment of the URL's path must
                      represent

                      the fully qualified name of the type (as in

                      `path/google.protobuf.Duration`). The name should be in a
                      canonical form

                      (e.g., leading "." is not accepted).


                      In practice, teams usually precompile into the binary all
                      types that they

                      expect it to use in the context of Any. However, for URLs
                      which use the

                      scheme `http`, `https`, or no scheme, one can optionally
                      set up a type

                      server that maps type URLs to message definitions as
                      follows:


                      * If no scheme is provided, `https` is assumed.

                      * An HTTP GET on the URL must yield a
                      [google.protobuf.Type][]
                        value in binary format, or produce an error.
                      * Applications are allowed to cache lookup results based
                      on the
                        URL, or have them precompiled into a binary to avoid any
                        lookup. Therefore, binary compatibility needs to be preserved
                        on changes to types. (Use versioned type names to manage
                        breaking changes.)

                      Note: this functionality is not currently available in the
                      official

                      protobuf release, and it is not used for type URLs
                      beginning with

                      type.googleapis.com.


                      Schemes other than `http`, `https` (or the empty scheme)
                      might be

                      used with implementation specific semantics.
                  value:
                    type: string
                    format: byte
                    description: >-
                      Must be a valid serialized protocol buffer of the above
                      specified type.
                description: >-
                  `Any` contains an arbitrary serialized protocol buffer message
                  along with a

                  URL that describes the type of the serialized message.


                  Protobuf library provides support to pack/unpack Any values in
                  the form

                  of utility functions or additional generated methods of the
                  Any type.


                  Example 1: Pack and unpack a message in C++.

                      Foo foo = ...;
                      Any any;
                      any.PackFrom(foo);
                      ...
                      if (any.UnpackTo(&foo)) {
                        ...
                      }

                  Example 2: Pack and unpack a message in Java.

                      Foo foo = ...;
                      Any any = Any.pack(foo);
                      ...
                      if (any.is(Foo.class)) {
                        foo = any.unpack(Foo.class);
                      }

                   Example 3: Pack and unpack a message in Python.

                      foo = Foo(...)
                      any = Any()
                      any.Pack(foo)
                      ...
                      if any.Is(Foo.DESCRIPTOR):
                        any.Unpack(foo)
                        ...

                   Example 4: Pack and unpack a message in Go

                       foo := &pb.Foo{...}
                       any, err := ptypes.MarshalAny(foo)
                       ...
                       foo := &pb.Foo{}
                       if err := ptypes.UnmarshalAny(any, foo); err != nil {
                         ...
                       }

                  The pack methods provided by protobuf library will by default
                  use

                  'type.googleapis.com/full.type.name' as the type URL and the
                  unpack

                  methods only use the fully qualified type name after the last
                  '/'

                  in the type URL, for example "foo.bar.com/x/y.z" will yield
                  type

                  name "y.z".



                  JSON

                  ====

                  The JSON representation of an `Any` value uses the regular

                  representation of the deserialized, embedded message, with an

                  additional field `@type` which contains the type URL. Example:

                      package google.profile;
                      message Person {
                        string first_name = 1;
                        string last_name = 2;
                      }

                      {
                        "@type": "type.googleapis.com/google.profile.Person",
                        "firstName": <string>,
                        "lastName": <string>
                      }

                  If the embedded message type is well-known and has a custom
                  JSON

                  representation, that representation will be embedded adding a
                  field

                  `value` which holds the custom JSON in addition to the `@type`

                  field. Example (for message [google.protobuf.Duration][]):

                      {
                        "@type": "type.googleapis.com/google.protobuf.Duration",
                        "value": "1.212s"
                      }
            description: >-
              QueryPlanResponse is the response type for the Query/Plan RPC
              method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        '404':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 5
              message: 'rpc error: code = NotFound desc = plan plan_id not found'
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 13
              message: 'rpc error: code = Internal desc = error'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: plan_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/positions/{farmer}':
    get:
      description: Returns the farming position of the farmer
      operationId: Position
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              staked_coins:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
              queued_coins:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryPositionResponse is the response type for the Query/Position
              RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/queued_stakings/{farmer}':
    get:
      summary: QueryStakings returns all queued stakings by a farmer.
      description: Returns all queued stakings that corresponds to the farmer
      operationId: QueuedStakings
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              queued_stakings:
                type: array
                items:
                  type: object
                  properties:
                    staking_coin_denom:
                      type: string
                    amount:
                      type: string
                    end_time:
                      type: string
                      format: date-time
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryQueuedStakingsResponse is the response type for the
              Query/QueuedStakings RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/rewards/{farmer}':
    get:
      summary: Rewards returns rewards for a farmer
      description: Returns all rewards coins that corresponds to the farmer
      operationId: Rewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    staking_coin_denom:
                      type: string
                    rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryRewardsResponse is the response type for the Query/Rewards
              RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/stakings/{farmer}':
    get:
      summary: Stakings returns all stakings by a farmer.
      description: >-
        Returns all stakings (staked and queued coins) that corresponds to the
        farmer
      operationId: Stakings
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              stakings:
                type: array
                items:
                  type: object
                  properties:
                    staking_coin_denom:
                      type: string
                    amount:
                      type: string
                    starting_epoch:
                      type: string
                      format: uint64
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryStakingsResponse is the response type for the Query/Stakings
              RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/total_stakings/{staking_coin_denom}':
    get:
      summary: TotalStakings returns total staking amount for a staking coin denom
      description: Returns total stakings that corresponds to the staking_coin_denom
      operationId: TotalStakings
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: string
            description: >-
              QueryTotalStakingsResponse is the response type for the
              Query/TotalStakings RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: staking_coin_denom
          in: path
          required: true
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/farming/v1beta1/unharvested_rewards/{farmer}':
    get:
      summary: UnharvestedRewards returns unharvested rewards for a farmer
      description: Returns all unharvested rewards that corresponds to the farmer
      operationId: UnharvestedRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              unharvested_rewards:
                type: array
                items:
                  type: object
                  properties:
                    staking_coin_denom:
                      type: string
                    rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryUnharvestedRewardsResponse is the response type for the
              Query/UnharvestedRewards RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: staking_coin_denom
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  '/crescent/liquidity/v1beta1/num_mm_orders/{orderer}/{pair_id}':
    get:
      operationId: NumMMOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              num_market_making_orders:
                type: integer
                format: int64
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: orderer
          in: path
          required: true
          type: string
        - name: pair_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/liquidity/v1beta1/order_books:
    get:
      operationId: OrderBooks
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pairs:
                type: array
                items:
                  type: object
                  properties:
                    pair_id:
                      type: string
                      format: uint64
                    base_price:
                      type: string
                    order_books:
                      type: array
                      items:
                        type: object
                        properties:
                          price_unit:
                            type: string
                          sells:
                            type: array
                            items:
                              type: object
                              properties:
                                price:
                                  type: string
                                user_order_amount:
                                  type: string
                                pool_order_amount:
                                  type: string
                          buys:
                            type: array
                            items:
                              type: object
                              properties:
                                price:
                                  type: string
                                user_order_amount:
                                  type: string
                                pool_order_amount:
                                  type: string
            description: >-
              QueryOrderBooksResponse is response type for Query/OrderBooks RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pair_ids
          in: query
          required: false
          type: array
          items:
            type: string
            format: uint64
          collectionFormat: multi
        - name: price_unit_powers
          in: query
          required: false
          type: array
          items:
            type: integer
            format: int64
          collectionFormat: multi
        - name: num_ticks
          in: query
          required: false
          type: integer
          format: int64
      tags:
        - Query
  '/crescent/liquidity/v1beta1/orders/{orderer}':
    get:
      summary: OrdersByOrderer returns orders made by an orderer.
      operationId: OrdersByOrderer
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      title: type specifies the typo of the order
                      type: string
                      enum:
                        - ORDER_TYPE_UNSPECIFIED
                        - ORDER_TYPE_LIMIT
                        - ORDER_TYPE_MARKET
                        - ORDER_TYPE_MM
                      default: ORDER_TYPE_UNSPECIFIED
                      description: |-
                        OrderType enumerates order types.

                         - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
                         - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
                         - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
                         - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
                    id:
                      type: string
                      format: uint64
                      title: id specifies the id of the order
                    pair_id:
                      type: string
                      format: uint64
                      title: pair_id specifies the pair id
                    msg_height:
                      type: string
                      format: int64
                      title: >-
                        msg_height specifies the block height when the order is
                        stored for the batch execution
                    orderer:
                      type: string
                      title: >-
                        orderer specifies the bech32-encoded address that makes
                        an order
                    direction:
                      title: >-
                        direction specifies the order direction; either buy or
                        sell
                      type: string
                      enum:
                        - ORDER_DIRECTION_UNSPECIFIED
                        - ORDER_DIRECTION_BUY
                        - ORDER_DIRECTION_SELL
                      default: ORDER_DIRECTION_UNSPECIFIED
                      description: |-
                        OrderDirection enumerates order directions.

                         - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
                         - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
                         - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
                    offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: remaining_offer_coin specifies the remaining offer coin
                    received_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: received_coin specifies the received coin after the swap
                    price:
                      type: string
                      title: >-
                        price specifies the price that an orderer is willing to
                        swap
                    amount:
                      type: string
                    open_amount:
                      type: string
                    batch_id:
                      type: string
                      format: uint64
                      title: >-
                        batch_id specifies the pair's batch id when the request
                        is stored
                    expire_at:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                        - ORDER_STATUS_UNSPECIFIED
                        - ORDER_STATUS_NOT_EXECUTED
                        - ORDER_STATUS_NOT_MATCHED
                        - ORDER_STATUS_PARTIALLY_MATCHED
                        - ORDER_STATUS_COMPLETED
                        - ORDER_STATUS_CANCELED
                        - ORDER_STATUS_EXPIRED
                      default: ORDER_STATUS_UNSPECIFIED
                      description: |-
                        OrderStatus enumerates order statuses.

                         - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
                         - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
                         - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
                         - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
                         - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
                         - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
                         - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
                  description: Order defines an order.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryOrdersResponse is response type for the Query/Orders RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: orderer
          in: path
          required: true
          type: string
        - name: pair_id
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  /crescent/liquidity/v1beta1/pairs:
    get:
      summary: Pairs returns all liquidity pairs.
      operationId: Pairs
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pairs:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    base_coin_denom:
                      type: string
                    quote_coin_denom:
                      type: string
                    escrow_address:
                      type: string
                    last_order_id:
                      type: string
                      format: uint64
                    last_price:
                      type: string
                    current_batch_id:
                      type: string
                      format: uint64
                  description: Pair defines a coin pair.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryPairsResponse is response type for the Query/Pairs RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denoms
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pairs/{pair_id}':
    get:
      summary: Pair returns the specific pair.
      operationId: Pair
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pair:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  base_coin_denom:
                    type: string
                  quote_coin_denom:
                    type: string
                  escrow_address:
                    type: string
                  last_order_id:
                    type: string
                    format: uint64
                  last_price:
                    type: string
                  current_batch_id:
                    type: string
                    format: uint64
                description: Pair defines a coin pair.
            description: QueryPairResponse is response type for the Query/Pair RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pair_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pairs/{pair_id}/orders':
    get:
      summary: Orders returns all orders within the pair.
      operationId: Orders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      title: type specifies the typo of the order
                      type: string
                      enum:
                        - ORDER_TYPE_UNSPECIFIED
                        - ORDER_TYPE_LIMIT
                        - ORDER_TYPE_MARKET
                        - ORDER_TYPE_MM
                      default: ORDER_TYPE_UNSPECIFIED
                      description: |-
                        OrderType enumerates order types.

                         - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
                         - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
                         - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
                         - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
                    id:
                      type: string
                      format: uint64
                      title: id specifies the id of the order
                    pair_id:
                      type: string
                      format: uint64
                      title: pair_id specifies the pair id
                    msg_height:
                      type: string
                      format: int64
                      title: >-
                        msg_height specifies the block height when the order is
                        stored for the batch execution
                    orderer:
                      type: string
                      title: >-
                        orderer specifies the bech32-encoded address that makes
                        an order
                    direction:
                      title: >-
                        direction specifies the order direction; either buy or
                        sell
                      type: string
                      enum:
                        - ORDER_DIRECTION_UNSPECIFIED
                        - ORDER_DIRECTION_BUY
                        - ORDER_DIRECTION_SELL
                      default: ORDER_DIRECTION_UNSPECIFIED
                      description: |-
                        OrderDirection enumerates order directions.

                         - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
                         - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
                         - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
                    offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    remaining_offer_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: remaining_offer_coin specifies the remaining offer coin
                    received_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: received_coin specifies the received coin after the swap
                    price:
                      type: string
                      title: >-
                        price specifies the price that an orderer is willing to
                        swap
                    amount:
                      type: string
                    open_amount:
                      type: string
                    batch_id:
                      type: string
                      format: uint64
                      title: >-
                        batch_id specifies the pair's batch id when the request
                        is stored
                    expire_at:
                      type: string
                      format: date-time
                    status:
                      type: string
                      enum:
                        - ORDER_STATUS_UNSPECIFIED
                        - ORDER_STATUS_NOT_EXECUTED
                        - ORDER_STATUS_NOT_MATCHED
                        - ORDER_STATUS_PARTIALLY_MATCHED
                        - ORDER_STATUS_COMPLETED
                        - ORDER_STATUS_CANCELED
                        - ORDER_STATUS_EXPIRED
                      default: ORDER_STATUS_UNSPECIFIED
                      description: |-
                        OrderStatus enumerates order statuses.

                         - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
                         - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
                         - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
                         - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
                         - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
                         - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
                         - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
                  description: Order defines an order.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryOrdersResponse is response type for the Query/Orders RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pair_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pairs/{pair_id}/orders/{id}':
    get:
      summary: Order returns the specific order.
      operationId: Order
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              order:
                type: object
                properties:
                  type:
                    title: type specifies the typo of the order
                    type: string
                    enum:
                      - ORDER_TYPE_UNSPECIFIED
                      - ORDER_TYPE_LIMIT
                      - ORDER_TYPE_MARKET
                      - ORDER_TYPE_MM
                    default: ORDER_TYPE_UNSPECIFIED
                    description: |-
                      OrderType enumerates order types.

                       - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
                       - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
                       - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
                       - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
                  id:
                    type: string
                    format: uint64
                    title: id specifies the id of the order
                  pair_id:
                    type: string
                    format: uint64
                    title: pair_id specifies the pair id
                  msg_height:
                    type: string
                    format: int64
                    title: >-
                      msg_height specifies the block height when the order is
                      stored for the batch execution
                  orderer:
                    type: string
                    title: >-
                      orderer specifies the bech32-encoded address that makes an
                      order
                  direction:
                    title: >-
                      direction specifies the order direction; either buy or
                      sell
                    type: string
                    enum:
                      - ORDER_DIRECTION_UNSPECIFIED
                      - ORDER_DIRECTION_BUY
                      - ORDER_DIRECTION_SELL
                    default: ORDER_DIRECTION_UNSPECIFIED
                    description: |-
                      OrderDirection enumerates order directions.

                       - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
                       - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
                       - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
                  offer_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  remaining_offer_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: remaining_offer_coin specifies the remaining offer coin
                  received_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: received_coin specifies the received coin after the swap
                  price:
                    type: string
                    title: >-
                      price specifies the price that an orderer is willing to
                      swap
                  amount:
                    type: string
                  open_amount:
                    type: string
                  batch_id:
                    type: string
                    format: uint64
                    title: >-
                      batch_id specifies the pair's batch id when the request is
                      stored
                  expire_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                    enum:
                      - ORDER_STATUS_UNSPECIFIED
                      - ORDER_STATUS_NOT_EXECUTED
                      - ORDER_STATUS_NOT_MATCHED
                      - ORDER_STATUS_PARTIALLY_MATCHED
                      - ORDER_STATUS_COMPLETED
                      - ORDER_STATUS_CANCELED
                      - ORDER_STATUS_EXPIRED
                    default: ORDER_STATUS_UNSPECIFIED
                    description: |-
                      OrderStatus enumerates order statuses.

                       - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
                       - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
                       - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
                       - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
                       - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
                       - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
                       - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
                description: Order defines an order.
            description: >-
              QueryOrderResponse is response type for the Query/Order RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pair_id
          in: path
          required: true
          type: string
          format: uint64
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/liquidity/v1beta1/params:
    get:
      summary: Params returns parameters of the module.
      operationId: LiquidityParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  batch_size:
                    type: integer
                    format: int64
                  tick_precision:
                    type: integer
                    format: int64
                  fee_collector_address:
                    type: string
                  dust_collector_address:
                    type: string
                  min_initial_pool_coin_supply:
                    type: string
                  pair_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  pool_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  min_initial_deposit_amount:
                    type: string
                  max_price_limit_ratio:
                    type: string
                  max_num_market_making_order_ticks:
                    type: integer
                    format: int64
                  max_num_market_making_orders_per_pair:
                    type: integer
                    format: int64
                  max_order_lifespan:
                    type: string
                  swap_fee_rate:
                    type: string
                  withdraw_fee_rate:
                    type: string
                  deposit_extra_gas:
                    type: string
                    format: uint64
                  withdraw_extra_gas:
                    type: string
                    format: uint64
                  order_extra_gas:
                    type: string
                    format: uint64
                  max_num_active_pools_per_pair:
                    type: integer
                    format: int64
                description: Params defines the parameters for the liquidity module.
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/liquidity/v1beta1/pools:
    get:
      summary: Pools returns all liquidity pools.
      operationId: Pools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - POOL_TYPE_UNSPECIFIED
                        - POOL_TYPE_BASIC
                        - POOL_TYPE_RANGED
                      default: POOL_TYPE_UNSPECIFIED
                      description: |-
                        PoolType enumerates pool types.

                         - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
                         - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
                         - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
                    id:
                      type: string
                      format: uint64
                    pair_id:
                      type: string
                      format: uint64
                    creator:
                      type: string
                    reserve_address:
                      type: string
                    pool_coin_denom:
                      type: string
                    pool_coin_supply:
                      type: string
                    min_price:
                      type: string
                    max_price:
                      type: string
                    price:
                      type: string
                    balances:
                      type: object
                      properties:
                        base_coin:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                        quote_coin:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                    last_deposit_request_id:
                      type: string
                      format: uint64
                    last_withdraw_request_id:
                      type: string
                      format: uint64
                    disabled:
                      type: boolean
                      format: boolean
                  description: PoolResponse defines a custom pool response message.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryPoolsResponse is response type for the Query/Pools RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pair_id
          in: query
          required: false
          type: string
          format: uint64
        - name: disabled
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/pool_coin_denom/{pool_coin_denom}':
    get:
      summary: >-
        PoolByPoolCoinDenom returns all pools that correspond to the pool coin
        denom.
      operationId: PoolByPoolCoinDenom
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - POOL_TYPE_UNSPECIFIED
                      - POOL_TYPE_BASIC
                      - POOL_TYPE_RANGED
                    default: POOL_TYPE_UNSPECIFIED
                    description: |-
                      PoolType enumerates pool types.

                       - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
                       - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
                       - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
                  id:
                    type: string
                    format: uint64
                  pair_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  reserve_address:
                    type: string
                  pool_coin_denom:
                    type: string
                  pool_coin_supply:
                    type: string
                  min_price:
                    type: string
                  max_price:
                    type: string
                  price:
                    type: string
                  balances:
                    type: object
                    properties:
                      base_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      quote_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  last_deposit_request_id:
                    type: string
                    format: uint64
                  last_withdraw_request_id:
                    type: string
                    format: uint64
                  disabled:
                    type: boolean
                    format: boolean
                description: PoolResponse defines a custom pool response message.
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_coin_denom
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/reserve_address/{reserve_address}':
    get:
      summary: >-
        PoolByReserveAddress returns all pools that correspond to the reserve
        account.
      operationId: PoolByReserveAddress
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - POOL_TYPE_UNSPECIFIED
                      - POOL_TYPE_BASIC
                      - POOL_TYPE_RANGED
                    default: POOL_TYPE_UNSPECIFIED
                    description: |-
                      PoolType enumerates pool types.

                       - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
                       - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
                       - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
                  id:
                    type: string
                    format: uint64
                  pair_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  reserve_address:
                    type: string
                  pool_coin_denom:
                    type: string
                  pool_coin_supply:
                    type: string
                  min_price:
                    type: string
                  max_price:
                    type: string
                  price:
                    type: string
                  balances:
                    type: object
                    properties:
                      base_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      quote_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  last_deposit_request_id:
                    type: string
                    format: uint64
                  last_withdraw_request_id:
                    type: string
                    format: uint64
                  disabled:
                    type: boolean
                    format: boolean
                description: PoolResponse defines a custom pool response message.
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: reserve_address
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/{pool_id}':
    get:
      summary: Pool returns the specific liquidity pool.
      operationId: LiquidityPool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - POOL_TYPE_UNSPECIFIED
                      - POOL_TYPE_BASIC
                      - POOL_TYPE_RANGED
                    default: POOL_TYPE_UNSPECIFIED
                    description: |-
                      PoolType enumerates pool types.

                       - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
                       - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
                       - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
                  id:
                    type: string
                    format: uint64
                  pair_id:
                    type: string
                    format: uint64
                  creator:
                    type: string
                  reserve_address:
                    type: string
                  pool_coin_denom:
                    type: string
                  pool_coin_supply:
                    type: string
                  min_price:
                    type: string
                  max_price:
                    type: string
                  price:
                    type: string
                  balances:
                    type: object
                    properties:
                      base_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      quote_coin:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  last_deposit_request_id:
                    type: string
                    format: uint64
                  last_withdraw_request_id:
                    type: string
                    format: uint64
                  disabled:
                    type: boolean
                    format: boolean
                description: PoolResponse defines a custom pool response message.
            description: QueryPoolResponse is response type for the Query/Pool RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/{pool_id}/deposit_requests':
    get:
      summary: DepositRequests returns all deposit requests.
      operationId: DepositRequests
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposit_requests:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      title: id specifies the id for the request
                    pool_id:
                      type: string
                      format: uint64
                      title: pool_id specifies the pool id
                    msg_height:
                      type: string
                      format: int64
                      title: >-
                        msg_height specifies the block height when the request
                        is stored for the batch execution
                    depositor:
                      type: string
                      title: >-
                        depositor specifies the bech32-encoded address that
                        makes a deposit to the pool
                    deposit_coins:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: deposit_coins specifies the amount of coins to deposit.
                    accepted_coins:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: >-
                        accepted_coins specifies the amount of coins that are
                        accepted.
                    minted_pool_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    status:
                      type: string
                      enum:
                        - REQUEST_STATUS_UNSPECIFIED
                        - REQUEST_STATUS_NOT_EXECUTED
                        - REQUEST_STATUS_SUCCEEDED
                        - REQUEST_STATUS_FAILED
                      default: REQUEST_STATUS_UNSPECIFIED
                      description: |-
                        RequestStatus enumerates request statuses.

                         - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                         - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                         - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                         - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
                  description: DepositRequest defines a deposit request.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryDepositRequestsResponse is response type for the
              Query/DepositRequests RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/{pool_id}/deposit_requests/{id}':
    get:
      summary: DepositRequest returns the specific deposit request.
      operationId: DepositRequest
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              deposit_request:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    title: id specifies the id for the request
                  pool_id:
                    type: string
                    format: uint64
                    title: pool_id specifies the pool id
                  msg_height:
                    type: string
                    format: int64
                    title: >-
                      msg_height specifies the block height when the request is
                      stored for the batch execution
                  depositor:
                    type: string
                    title: >-
                      depositor specifies the bech32-encoded address that makes
                      a deposit to the pool
                  deposit_coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: deposit_coins specifies the amount of coins to deposit.
                  accepted_coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: >-
                      accepted_coins specifies the amount of coins that are
                      accepted.
                  minted_pool_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  status:
                    type: string
                    enum:
                      - REQUEST_STATUS_UNSPECIFIED
                      - REQUEST_STATUS_NOT_EXECUTED
                      - REQUEST_STATUS_SUCCEEDED
                      - REQUEST_STATUS_FAILED
                    default: REQUEST_STATUS_UNSPECIFIED
                    description: |-
                      RequestStatus enumerates request statuses.

                       - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                       - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                       - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                       - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
                description: DepositRequest defines a deposit request.
            description: >-
              QueryDepositRequestResponse is response type for the
              Query/DepositRequest RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/{pool_id}/withdraw_requests':
    get:
      summary: WithdrawRequests returns all withdraw requests.
      operationId: WithdrawRequests
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw_requests:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      title: id specifies the id for the request
                    pool_id:
                      type: string
                      format: uint64
                      title: pool_id specifies the pool id
                    msg_height:
                      type: string
                      format: int64
                      title: >-
                        msg_height specifies the block height when the request
                        is stored for the batch execution
                    withdrawer:
                      type: string
                      title: >-
                        withdrawer specifies the bech32-encoded address that
                        withdraws pool coin from the pool
                    pool_coin:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: >-
                        pool_coin specifies the pool coin that is a proof of
                        liquidity provider for the pool
                    withdrawn_coins:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      description: >-
                        withdrawn_coins specifies the amount of coins that are
                        withdrawn.
                    status:
                      type: string
                      enum:
                        - REQUEST_STATUS_UNSPECIFIED
                        - REQUEST_STATUS_NOT_EXECUTED
                        - REQUEST_STATUS_SUCCEEDED
                        - REQUEST_STATUS_FAILED
                      default: REQUEST_STATUS_UNSPECIFIED
                      description: |-
                        RequestStatus enumerates request statuses.

                         - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                         - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                         - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                         - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
                  description: WithdrawRequest defines a withdraw request.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryWithdrawRequestsResponse is response type for the
              Query/WithdrawRequests RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidity/v1beta1/pools/{pool_id}/withdraw_requests/{id}':
    get:
      summary: WithdrawRequest returns the specific withdraw request.
      operationId: WithdrawRequest
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              withdraw_request:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    title: id specifies the id for the request
                  pool_id:
                    type: string
                    format: uint64
                    title: pool_id specifies the pool id
                  msg_height:
                    type: string
                    format: int64
                    title: >-
                      msg_height specifies the block height when the request is
                      stored for the batch execution
                  withdrawer:
                    type: string
                    title: >-
                      withdrawer specifies the bech32-encoded address that
                      withdraws pool coin from the pool
                  pool_coin:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: >-
                      pool_coin specifies the pool coin that is a proof of
                      liquidity provider for the pool
                  withdrawn_coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    description: >-
                      withdrawn_coins specifies the amount of coins that are
                      withdrawn.
                  status:
                    type: string
                    enum:
                      - REQUEST_STATUS_UNSPECIFIED
                      - REQUEST_STATUS_NOT_EXECUTED
                      - REQUEST_STATUS_SUCCEEDED
                      - REQUEST_STATUS_FAILED
                    default: REQUEST_STATUS_UNSPECIFIED
                    description: |-
                      RequestStatus enumerates request statuses.

                       - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                       - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                       - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                       - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
                description: WithdrawRequest defines a withdraw request.
            description: >-
              QueryWithdrawRequestResponse is response type for the
              Query/WithdrawRequest RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/cosmos/budget/v1beta1/addresses/{name}':
    get:
      summary: >-
        Addresses returns an address that can be used as source and destination
        is derived according to the given type,

        module name, and name.
      operationId: Addresses
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              address:
                type: string
            description: >-
              QueryAddressesResponse is the response type for the
              Query/Addresses RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'invalid names with address type: invalid request'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          description: The name to be used for address derivation.
          in: path
          required: true
          type: string
        - name: type
          description: >-
            The Address Type, default 0 for ADDRESS_TYPE_32_BYTES or 1 for
            ADDRESS_TYPE_20_BYTES.

             - ADDRESS_TYPE_32_BYTES: the 32 bytes length address type of ADR 028.
             - ADDRESS_TYPE_20_BYTES: the default 20 bytes length address type.
          in: query
          required: false
          type: string
          enum:
            - ADDRESS_TYPE_32_BYTES
            - ADDRESS_TYPE_20_BYTES
          default: ADDRESS_TYPE_32_BYTES
        - name: module_name
          description: >-
            The module name to be used for address derivation, default is
            budget.
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/budget/v1beta1/budgets:
    get:
      summary: Budgets returns all budgets.
      description: Returns all budgets.
      operationId: Budgets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              budgets:
                type: array
                items:
                  type: object
                  properties:
                    budget:
                      type: object
                      properties:
                        name:
                          type: string
                          title: name defines the name of the budget
                        rate:
                          type: string
                          title: >-
                            rate specifies the distributing amount by ratio of
                            total budget source
                        source_address:
                          type: string
                          title: >-
                            source_address defines the bech32-encoded address
                            that source of the budget
                        destination_address:
                          type: string
                          title: >-
                            destination_address defines the bech32-encoded
                            address of the budget pool to distribute
                        start_time:
                          type: string
                          format: date-time
                          title: start_time specifies the start time of the budget
                        end_time:
                          type: string
                          format: date-time
                          title: end_time specifies the end time of the budget
                      description: Budget defines a budget object.
                    total_collected_coins:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
            description: >-
              QueryBudgetsResponse is the response type for the Query/Budgets
              RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: name
          in: query
          required: false
          type: string
        - name: source_address
          in: query
          required: false
          type: string
        - name: destination_address
          in: query
          required: false
          type: string
      tags:
        - Query
  /cosmos/budget/v1beta1/params:
    get:
      summary: Params returns parameters of the budget module.
      description: Returns all parameters of the budget module.
      operationId: BudgetParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  epoch_blocks:
                    type: integer
                    format: int64
                    title: >-
                      The universal epoch length in number of blocks

                      A collection of budgets is executed with this epoch_blocks
                      parameter
                  budgets:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          title: name defines the name of the budget
                        rate:
                          type: string
                          title: >-
                            rate specifies the distributing amount by ratio of
                            total budget source
                        source_address:
                          type: string
                          title: >-
                            source_address defines the bech32-encoded address
                            that source of the budget
                        destination_address:
                          type: string
                          title: >-
                            destination_address defines the bech32-encoded
                            address of the budget pool to distribute
                        start_time:
                          type: string
                          format: date-time
                          title: start_time specifies the start time of the budget
                        end_time:
                          type: string
                          format: date-time
                          title: end_time specifies the end time of the budget
                      description: Budget defines a budget object.
                    title: >-
                      Budgets parameter can be added, modified, and deleted
                      through

                      parameter change governance proposal
                description: Params defines the parameters for the budget module.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
  /crescent/liquidstaking/v1beta1/params:
    get:
      summary: Params returns parameters of the liquidstaking module.
      description: Returns all parameters of the liquid staking module.
      operationId: LiquidStakingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  liquid_bond_denom:
                    type: string
                    description: >-
                      LiquidBondDenom specifies the denomination of the token
                      receiving after LiquidStaking, The value is calculated

                      through NetAmount.
                  whitelisted_validators:
                    type: array
                    items:
                      type: object
                      properties:
                        validator_address:
                          type: string
                          title: >-
                            validator_address defines the bech32-encoded address
                            that whitelisted validator
                        target_weight:
                          type: string
                          title: >-
                            target_weight specifies the target weight for liquid
                            staking, unstaking amount, which is a value for
                            calculating

                            the real weight to be derived according to the
                            active status
                      description: >-
                        WhitelistedValidator consists of the validator operator
                        address and the target weight, which is a value for

                        calculating the real weight to be derived according to
                        the active status. In the case of inactive, it is
                        calculated

                        as zero.
                    description: >-
                      WhitelistedValidators specifies the validators elected to
                      become Active Liquid Validators.
                  unstake_fee_rate:
                    type: string
                    title: >-
                      UnstakeFeeRate specifies the fee rate when liquid unstake
                      is requested, unbonded by subtracting it from

                      unbondingAmount
                  min_liquid_staking_amount:
                    type: string
                    description: >-
                      MinLiquidStakingAmount specifies the minimum number of
                      coins to be staked to the active liquid validators on
                      liquid

                      staking to minimize decimal loss and consider gas
                      efficiency.
                description: Params defines the set of params for the liquidstaking module.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
      externalDocs:
        description: Find out more about the params
        url: >-
          https://github.com/crescent-network/crescent/tree/main/x/liquidstaking/spec
  /crescent/liquidstaking/v1beta1/states:
    get:
      summary: States returns states of the liquidstaking module.
      description: Returns states of the liquid staking module.
      operationId: States
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              net_amount_state:
                type: object
                properties:
                  mint_rate:
                    type: string
                    title: mint_rate is bTokenTotalSupply / NetAmount
                  btoken_total_supply:
                    type: string
                    title: >-
                      btoken_total_supply returns the total supply of
                      btoken(liquid_bond_denom)
                  net_amount:
                    type: string
                    title: >-
                      net_amount is proxy account's native token balance + total
                      liquid tokens + total remaining rewards + total

                      unbonding balance
                  total_del_shares:
                    type: string
                    title: >-
                      total_del_shares define the delegation shares of all
                      liquid validators
                  total_liquid_tokens:
                    type: string
                    title: >-
                      total_liquid_tokens define the token amount worth of
                      delegation shares of all liquid validator (slashing
                      applied

                      amount)
                  total_remaining_rewards:
                    type: string
                    title: >-
                      total_remaining_rewards define the sum of remaining
                      rewards of proxy account by all liquid validators
                  total_unbonding_balance:
                    type: string
                    title: >-
                      total_unbonding_balance define the unbonding balance of
                      proxy account by all liquid validator (slashing applied

                      amount)
                  proxy_acc_balance:
                    type: string
                    title: >-
                      proxy_acc_balance define the balance of proxy account for
                      the native token
                description: >-
                  NetAmountState is type for net amount raw data and mint rate,
                  This is a value that depends on the several module

                  state every time, so it is used only for calculation and query
                  and is not stored in kv.
            description: >-
              QueryStatesResponse is the response type for the Query/States RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
      externalDocs:
        description: Find out more about the liquid staking
        url: >-
          https://github.com/crescent-network/crescent/tree/main/x/liquidstaking/spec
  /crescent/liquidstaking/v1beta1/validators:
    get:
      summary: >-
        LiquidValidators returns liquid validators with states of the
        liquidstaking module.
      description: Returns all liquid validators of the liquid staking module.
      operationId: LiquidValidators
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquid_validators:
                type: array
                items:
                  type: object
                  properties:
                    operator_address:
                      type: string
                      description: >-
                        operator_address defines the address of the validator's
                        operator; bech encoded in JSON.
                    weight:
                      type: string
                      title: >-
                        weight specifies the weight for liquid staking,
                        unstaking amount
                    status:
                      title: status is the liquid validator status
                      type: string
                      enum:
                        - VALIDATOR_STATUS_UNSPECIFIED
                        - VALIDATOR_STATUS_ACTIVE
                        - VALIDATOR_STATUS_INACTIVE
                      default: VALIDATOR_STATUS_UNSPECIFIED
                      description: >-
                        ValidatorStatus enumerates the status of a liquid
                        validator.

                         - VALIDATOR_STATUS_UNSPECIFIED: VALIDATOR_STATUS_UNSPECIFIED defines the unspecified invalid status.
                         - VALIDATOR_STATUS_ACTIVE: VALIDATOR_STATUS_ACTIVE defines the active, valid status
                         - VALIDATOR_STATUS_INACTIVE: VALIDATOR_STATUS_INACTIVE defines the inactive, invalid status
                    del_shares:
                      type: string
                      title: del_shares define the delegation shares of the validator
                    liquid_tokens:
                      type: string
                      title: >-
                        liquid_tokens define the token amount worth of
                        delegation shares of the validator (slashing applied
                        amount)
                  description: >-
                    LiquidValidatorState is type LiquidValidator with state
                    added to return to query results.
            description: >-
              QueryLiquidValidatorsResponse is the response type for the
              Query/LiquidValidators RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
      externalDocs:
        description: Find out more about the liquid validators
        url: >-
          https://github.com/crescent-network/crescent/tree/main/x/liquidstaking/spec
  '/crescent/liquidstaking/v1beta1/voting_power/{voter}':
    get:
      summary: >-
        VotingPower returns voting power of staking and liquid staking module's
        of the voter that can be exercised.
      description: >-
        Returns voting power of staking and liquid staking module's of the voter
        that can be exercised.
      operationId: VotingPower
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              voting_power:
                type: object
                properties:
                  voter:
                    type: string
                    description: >-
                      voter defines the address of the voter; bech encoded in
                      JSON.
                  staking_voting_power:
                    type: string
                    description: >-
                      staking_voting_power return the voting power of staking
                      that can be exercised.
                  liquid_staking_voting_power:
                    type: string
                    description: >-
                      liquid_staking_voting_power return the voting power of
                      liquid staking that can be exercised.
                  validator_voting_power:
                    type: string
                    description: >-
                      validator_voting_power return the voting power of the
                      validator if the voter is the validator operator that can
                      be

                      exercised.
                description: >-
                  VotingPower is type for current voting power of the voter
                  including staking module's voting power and liquid staking

                  module's voting power, It depends on the amount of delegation
                  of staking module, the bonded state of the delegated

                  validator, the value of btoken(liquid_bond_denom), and the
                  pool coin and farming position containing btoken..
            description: >-
              QueryVotingPowerResponse is the response type for the Query/States
              RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: voter
          in: path
          required: true
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the liquid validators
        url: >-
          https://github.com/crescent-network/crescent/tree/main/x/liquidstaking/spec
  /crescent/mint/v1beta1/last_block_time:
    get:
      summary: LastBlockTime returns the last block time.
      operationId: LastBlockTime
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              last_block_time:
                type: string
                format: date-time
            description: >-
              QueryLastBlockTimeResponse is the response type for the
              Query/LastBlockTime RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/mint/v1beta1/params:
    get:
      summary: Params returns the total set of minting parameters.
      operationId: MintParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                description: params defines the parameters of the module.
                type: object
                properties:
                  mint_denom:
                    type: string
                    title: mint_denom defines denomination of coin to be minted
                  mint_pool_address:
                    type: string
                    description: >-
                      mint_pool_address defines the address where inflation will
                      be minted. The default is FeeCollector,

                      but if it is set to FeeCollector, minted inflation could
                      be mixed together with collected tx fees.

                      Therefore, it is recommended to specify a separate address
                      depending on usage.
                  block_time_threshold:
                    type: string
                    title: >-
                      block_time_threshold defines block time threshold to
                      prevent from any inflationary manipulation attacks

                      it is used for maximum block duration when calculating
                      block inflation
                  inflation_schedules:
                    type: array
                    items:
                      type: object
                      properties:
                        start_time:
                          type: string
                          format: date-time
                          title: >-
                            start_time defines the start date time for the
                            inflation schedule
                        end_time:
                          type: string
                          format: date-time
                          title: >-
                            end_time defines the end date time for the inflation
                            schedule
                        amount:
                          type: string
                          title: >-
                            amount defines the total amount of inflation for the
                            schedule
                      description: >-
                        InflationSchedule defines the start and end time of the
                        inflation period, and the amount of inflation during
                        that

                        period.
                    title: inflation_schedules defines a list of inflation schedules
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/claim/v1beta1/airdrops:
    get:
      summary: Airdrops returns all airdrops.
      operationId: Airdrops
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              airdrops:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      title: id specifies index of the airdrop
                    source_address:
                      type: string
                      title: |-
                        source_address defines the bech32-encoded source address
                        where the source of coins from
                    conditions:
                      type: array
                      items:
                        type: string
                        enum:
                          - CONDITION_TYPE_UNSPECIFIED
                          - CONDITION_TYPE_DEPOSIT
                          - CONDITION_TYPE_SWAP
                          - CONDITION_TYPE_LIQUIDSTAKE
                          - CONDITION_TYPE_VOTE
                        default: CONDITION_TYPE_UNSPECIFIED
                        description: >-
                          ConditionType defines the type of condition that a
                          recipient must execute in order to receive a claimable
                          amount.

                           - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                           - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                           - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                           - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                           - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
                      title: conditions specifies a list of conditions
                    start_time:
                      type: string
                      format: date-time
                      title: start_time specifies the start time of the airdrop
                    end_time:
                      type: string
                      format: date-time
                      title: end_time specifies the start time of the airdrop
                  description: Airdrop defines airdrop information.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryAirdropsResponse is response type for the Query/Airdrops RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/claim/v1beta1/airdrops/{airdrop_id}':
    get:
      summary: Airdrop returns the specific airdrop.
      operationId: Airdrop
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              airdrop:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    title: id specifies index of the airdrop
                  source_address:
                    type: string
                    title: |-
                      source_address defines the bech32-encoded source address
                      where the source of coins from
                  conditions:
                    type: array
                    items:
                      type: string
                      enum:
                        - CONDITION_TYPE_UNSPECIFIED
                        - CONDITION_TYPE_DEPOSIT
                        - CONDITION_TYPE_SWAP
                        - CONDITION_TYPE_LIQUIDSTAKE
                        - CONDITION_TYPE_VOTE
                      default: CONDITION_TYPE_UNSPECIFIED
                      description: >-
                        ConditionType defines the type of condition that a
                        recipient must execute in order to receive a claimable
                        amount.

                         - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                         - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                         - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                         - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                         - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
                    title: conditions specifies a list of conditions
                  start_time:
                    type: string
                    format: date-time
                    title: start_time specifies the start time of the airdrop
                  end_time:
                    type: string
                    format: date-time
                    title: end_time specifies the start time of the airdrop
                description: Airdrop defines airdrop information.
            description: >-
              QueryAirdropResponse is response type for the Query/Airdrop RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: airdrop_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/claim/v1beta1/airdrops/{airdrop_id}/claim_records/{recipient}':
    get:
      summary: ClaimRecord returns the claim record for the recipient address.
      operationId: ClaimRecord
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              claim_record:
                type: object
                properties:
                  airdrop_id:
                    type: string
                    format: uint64
                    title: airdrop_id specifies airdrop id
                  recipient:
                    type: string
                    title: >-
                      recipient specifies the bech32-encoded address that is
                      eligible to claim airdrop
                  initial_claimable_coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      initial_claimable_coins specifies the initial claimable
                      coins
                  claimable_coins:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: claimable_coins specifies the unclaimed claimable coins
                  claimed_conditions:
                    type: array
                    items:
                      type: string
                      enum:
                        - CONDITION_TYPE_UNSPECIFIED
                        - CONDITION_TYPE_DEPOSIT
                        - CONDITION_TYPE_SWAP
                        - CONDITION_TYPE_LIQUIDSTAKE
                        - CONDITION_TYPE_VOTE
                      default: CONDITION_TYPE_UNSPECIFIED
                      description: >-
                        ConditionType defines the type of condition that a
                        recipient must execute in order to receive a claimable
                        amount.

                         - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                         - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                         - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                         - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                         - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
                    title: >-
                      claimed_conditions specifies a list of condition types

                      initial values are empty and each condition type gets
                      appended when claim is successfully executed
                description: >-
                  ClaimRecord defines claim record that corresponds to the
                  airdrop.
            description: >-
              QueryClaimRecordResponse is response type for the
              Query/ClaimRecord RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: airdrop_id
          in: path
          required: true
          type: string
          format: uint64
        - name: recipient
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/marketmaker/v1beta1/incentive/{address}':
    get:
      summary: Incentive returns a specific incentive.
      description: Returns the marketmaker's claimable incentive.
      operationId: Incentive
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              incentive:
                type: object
                properties:
                  address:
                    type: string
                  claimable:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                title: >-
                  Store the total amount of incentives distributed through
                  `MarketMakerProposal`, and it can be claimed at once through

                  `MsgClaimIncentives`
            description: >-
              QueryIncentiveResponse is the response type for the
              Query/Incentive RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        '404':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 5
              message: 'rpc error: code = NotFound desc = incentive address not found'
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 13
              message: 'rpc error: code = Internal desc = error'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: path
          required: true
          type: string
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  /crescent/marketmaker/v1beta1/marketmakers:
    get:
      summary: MarketMakers returns all market makers.
      description: Returns a list of all market makers with pagination result.
      operationId: MarketMakers
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              marketmakers:
                type: array
                items:
                  type: object
                  properties:
                    address:
                      type: string
                    pair_id:
                      type: string
                      format: uint64
                    eligible:
                      type: boolean
                      format: boolean
                  title: >-
                    Market maker object created by applying, if included through
                    `MarketMakerProposal`, eligible becomes true and is

                    deleted if rejected or excluded
              pagination:
                description: pagination defines the pagination in the response.
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
            description: >-
              QueryMarketMakersResponse is the response type for the
              Query/MarketMakers RPC method.
        '400':
          description: Bad Request
          schema: {}
          examples:
            application/json:
              code: 3
              message: 'rpc error: code = InvalidArgument desc = empty request'
              details: []
        '500':
          description: Internal Server Error
          schema: {}
          examples:
            application/json:
              code: 13
              message: 'rpc error: code = Internal desc = error'
              details: []
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      parameters:
        - name: address
          in: query
          required: false
          type: string
        - name: pair_id
          in: query
          required: false
          type: string
          format: uint64
        - name: eligible
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
      externalDocs:
        description: Find out more about the query and error codes
        url: 'https://github.com/crescent-network/crescent/tree/main/docs'
  /crescent/marketmaker/v1beta1/params:
    get:
      summary: Params returns parameters of the marketmaker module.
      description: Returns all parameters of the marketmaker module.
      operationId: MarketMakerParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  incentive_budget_address:
                    type: string
                    title: Address containing the funds used to distribute incentives
                  deposit_amount:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      The amount of deposit to be applied to the market maker,
                      which is calculated per pair and is refunded when the

                      market maker included or rejected through the MarketMaker
                      Proposal
                  common:
                    title: Common variables used in market maker scoring system
                    type: object
                    properties:
                      min_open_ratio:
                        type: string
                        title: Minimum ratio to maintain the tick order
                      min_open_depth_ratio:
                        type: string
                        title: Minimum ratio of open amount to MinDepth
                      max_downtime:
                        type: integer
                        format: int64
                        title: Maximum allowable consecutive blocks of outage
                      max_total_downtime:
                        type: integer
                        format: int64
                        title: Maximum allowable sum of blocks in an hour
                      min_hours:
                        type: integer
                        format: int64
                        title: Minimum value of LiveHour to achieve LiveDay
                      min_days:
                        type: integer
                        format: int64
                        title: Minimum value of LiveDay to maintain MM eligibility
                  incentive_pairs:
                    type: array
                    items:
                      type: object
                      properties:
                        pair_id:
                          type: string
                          format: uint64
                          title: Pair id of liquidity module
                        update_time:
                          type: string
                          format: date-time
                          title: >-
                            Time the pair variables start to be applied to the
                            scoring system
                        incentive_weight:
                          type: string
                          title: Incentive weights for each pair
                        max_spread:
                          type: string
                          title: Maximum allowable spread between bid and ask
                        min_width:
                          type: string
                          title: >-
                            Minimum allowable price difference of high and low
                            on both side of orders
                        min_depth:
                          type: string
                          title: Minimum allowable order depth on each side
                    title: >-
                      Include the pairs that are incentive target pairs and the
                      variables used in market maker scoring system
                description: Params defines the set of params for the marketmaker module.
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                      description: >-
                        A URL/resource name that uniquely identifies the type of
                        the serialized

                        protocol buffer message. This string must contain at
                        least

                        one "/" character. The last segment of the URL's path
                        must represent

                        the fully qualified name of the type (as in

                        `path/google.protobuf.Duration`). The name should be in
                        a canonical form

                        (e.g., leading "." is not accepted).


                        In practice, teams usually precompile into the binary
                        all types that they

                        expect it to use in the context of Any. However, for
                        URLs which use the

                        scheme `http`, `https`, or no scheme, one can optionally
                        set up a type

                        server that maps type URLs to message definitions as
                        follows:


                        * If no scheme is provided, `https` is assumed.

                        * An HTTP GET on the URL must yield a
                        [google.protobuf.Type][]
                          value in binary format, or produce an error.
                        * Applications are allowed to cache lookup results based
                        on the
                          URL, or have them precompiled into a binary to avoid any
                          lookup. Therefore, binary compatibility needs to be preserved
                          on changes to types. (Use versioned type names to manage
                          breaking changes.)

                        Note: this functionality is not currently available in
                        the official

                        protobuf release, and it is not used for type URLs
                        beginning with

                        type.googleapis.com.


                        Schemes other than `http`, `https` (or the empty scheme)
                        might be

                        used with implementation specific semantics.
                    value:
                      type: string
                      format: byte
                      description: >-
                        Must be a valid serialized protocol buffer of the above
                        specified type.
                  description: >-
                    `Any` contains an arbitrary serialized protocol buffer
                    message along with a

                    URL that describes the type of the serialized message.


                    Protobuf library provides support to pack/unpack Any values
                    in the form

                    of utility functions or additional generated methods of the
                    Any type.


                    Example 1: Pack and unpack a message in C++.

                        Foo foo = ...;
                        Any any;
                        any.PackFrom(foo);
                        ...
                        if (any.UnpackTo(&foo)) {
                          ...
                        }

                    Example 2: Pack and unpack a message in Java.

                        Foo foo = ...;
                        Any any = Any.pack(foo);
                        ...
                        if (any.is(Foo.class)) {
                          foo = any.unpack(Foo.class);
                        }

                     Example 3: Pack and unpack a message in Python.

                        foo = Foo(...)
                        any = Any()
                        any.Pack(foo)
                        ...
                        if any.Is(Foo.DESCRIPTOR):
                          any.Unpack(foo)
                          ...

                     Example 4: Pack and unpack a message in Go

                         foo := &pb.Foo{...}
                         any, err := ptypes.MarshalAny(foo)
                         ...
                         foo := &pb.Foo{}
                         if err := ptypes.UnmarshalAny(any, foo); err != nil {
                           ...
                         }

                    The pack methods provided by protobuf library will by
                    default use

                    'type.googleapis.com/full.type.name' as the type URL and the
                    unpack

                    methods only use the fully qualified type name after the
                    last '/'

                    in the type URL, for example "foo.bar.com/x/y.z" will yield
                    type

                    name "y.z".



                    JSON

                    ====

                    The JSON representation of an `Any` value uses the regular

                    representation of the deserialized, embedded message, with
                    an

                    additional field `@type` which contains the type URL.
                    Example:

                        package google.profile;
                        message Person {
                          string first_name = 1;
                          string last_name = 2;
                        }

                        {
                          "@type": "type.googleapis.com/google.profile.Person",
                          "firstName": <string>,
                          "lastName": <string>
                        }

                    If the embedded message type is well-known and has a custom
                    JSON

                    representation, that representation will be embedded adding
                    a field

                    `value` which holds the custom JSON in addition to the
                    `@type`

                    field. Example (for message [google.protobuf.Duration][]):

                        {
                          "@type": "type.googleapis.com/google.protobuf.Duration",
                          "value": "1.212s"
                        }
      tags:
        - Query
      externalDocs:
        description: Find out more about the params
        url: >-
          https://github.com/crescent-network/crescent/blob/main/x/marketmaker/spec/07_params.md
  '/crescent/lpfarm/v1beta1/farms/{denom}':
    get:
      operationId: Farm
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              farm:
                type: object
                properties:
                  total_farming_amount:
                    type: string
                  current_rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  outstanding_rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  period:
                    type: string
                    format: uint64
                  previous_share:
                    type: string
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/historical_rewards/{denom}':
    get:
      operationId: LPFarmHistoricalRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              historical_rewards:
                type: array
                items:
                  type: object
                  properties:
                    period:
                      type: string
                      format: uint64
                    cumulative_unit_rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                    reference_count:
                      type: integer
                      format: int64
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: denom
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  /crescent/lpfarm/v1beta1/params:
    get:
      operationId: LPFarmParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  private_plan_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  fee_collector:
                    type: string
                  max_num_private_plans:
                    type: integer
                    format: int64
                  max_block_duration:
                    type: string
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/lpfarm/v1beta1/plans:
    get:
      operationId: LPFarmPlans
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plans:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    description:
                      type: string
                    farming_pool_address:
                      type: string
                    termination_address:
                      type: string
                    reward_allocations:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          pair_id:
                            type: string
                            format: uint64
                          rewards_per_day:
                            type: array
                            items:
                              type: object
                              properties:
                                denom:
                                  type: string
                                amount:
                                  type: string
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    is_private:
                      type: boolean
                      format: boolean
                    is_terminated:
                      type: boolean
                      format: boolean
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: farming_pool_address
          in: query
          required: false
          type: string
        - name: termination_address
          in: query
          required: false
          type: string
        - name: is_private
          in: query
          required: false
          type: string
        - name: is_terminated
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/plans/{plan_id}':
    get:
      operationId: LPFarmPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              plan:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  description:
                    type: string
                  farming_pool_address:
                    type: string
                  termination_address:
                    type: string
                  reward_allocations:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        pair_id:
                          type: string
                          format: uint64
                        rewards_per_day:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  is_private:
                    type: boolean
                    format: boolean
                  is_terminated:
                    type: boolean
                    format: boolean
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: plan_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/positions/{farmer}':
    get:
      operationId: Positions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              positions:
                type: array
                items:
                  type: object
                  properties:
                    farmer:
                      type: string
                    denom:
                      type: string
                    farming_amount:
                      type: string
                    previous_period:
                      type: string
                      format: uint64
                    starting_block_height:
                      type: string
                      format: int64
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/positions/{farmer}/{denom}':
    get:
      operationId: LPFarmPosition
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              position:
                type: object
                properties:
                  farmer:
                    type: string
                  denom:
                    type: string
                  farming_amount:
                    type: string
                  previous_period:
                    type: string
                    format: uint64
                  starting_block_height:
                    type: string
                    format: int64
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/rewards/{farmer}':
    get:
      operationId: TotalRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
      tags:
        - Query
  '/crescent/lpfarm/v1beta1/rewards/{farmer}/{denom}':
    get:
      operationId: LPFarmRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: farmer
          in: path
          required: true
          type: string
        - name: denom
          in: path
          required: true
          type: string
      tags:
        - Query
  /crescent/liquidfarming/v1beta1/liquidfarms:
    get:
      summary: LiquidFarms returns all liquid farms registered in params
      operationId: LiquidFarms
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquid_farms:
                type: array
                items:
                  type: object
                  properties:
                    pool_id:
                      type: string
                      format: uint64
                    liquid_farm_reserve_address:
                      type: string
                    lf_coin_denom:
                      type: string
                    lf_coin_supply:
                      type: string
                    pool_coin_denom:
                      type: string
                    pool_coin_farming_amount:
                      type: string
                    min_farm_amount:
                      type: string
                    min_bid_amount:
                      type: string
                  description: >-
                    LiquidFarmResponse is response type for the Query/LiquidFarm
                    RPC method.
            description: >-
              QueryLiquidFarmsResponse is response type for the
              Query/LiquidFarms RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}':
    get:
      summary: LiquidFarm returns the specific liquid farm
      operationId: LiquidFarm
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquid_farm:
                type: object
                properties:
                  pool_id:
                    type: string
                    format: uint64
                  liquid_farm_reserve_address:
                    type: string
                  lf_coin_denom:
                    type: string
                  lf_coin_supply:
                    type: string
                  pool_coin_denom:
                    type: string
                  pool_coin_farming_amount:
                    type: string
                  min_farm_amount:
                    type: string
                  min_bid_amount:
                    type: string
                description: >-
                  LiquidFarmResponse is response type for the Query/LiquidFarm
                  RPC method.
            description: >-
              QueryLiquidFarmResponse is response type for the Query/LiquidFarm
              RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}/bids':
    get:
      summary: Bids returns all bids for the liquid farm
      operationId: LiquidFarmingBids
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bids:
                type: array
                items:
                  type: object
                  properties:
                    pool_id:
                      type: string
                      format: uint64
                      title: pool_id specifies the pool id
                    bidder:
                      type: string
                      title: >-
                        bidder specifies the bech32-encoded address that places
                        a bid for the auction
                    amount:
                      title: amount specifies the amount to place a bid
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: Bid defines standard bid for a rewards auction.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: QueryBidsResponse is response type for the Query/Bids RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}/exchange_rate':
    get:
      summary: >-
        ExchangeRate returns exchange rates (mint rate and burn rate) for the
        liquid farm
      operationId: LiquidFarmingExchangeRate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              exchange_rate:
                type: object
                properties:
                  mint_rate:
                    type: string
                  burn_rate:
                    type: string
            description: >-
              QueryExchangeRateResponse is response type for the
              Query/ExchangeRate RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}/rewards':
    get:
      summary: Rewards returns all accumulated farming rewards for the liquid farm
      operationId: LiquidFarmingRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryRewardsResponse is response type for the Query/Rewards RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}/rewards_auctions':
    get:
      summary: >-
        RewardsAuctions returns all rewards auctions that correspond to the
        given pool id
      operationId: LiquidFarmingRewardsAuctions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards_auctions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                      title: id specifies the unique auction id
                    pool_id:
                      type: string
                      format: uint64
                      title: pool_id specifies the liquidity pool id
                    bidding_coin_denom:
                      type: string
                      title: >-
                        bidding_coin_denom specifies the bidding coin
                        denomination
                    paying_reserve_address:
                      type: string
                      title: >-
                        paying_reserve_address specfies the account that
                        reserves bidding amounts placed by bidders
                    start_time:
                      type: string
                      format: date-time
                      title: start_time specifies the start time of an auction
                    end_time:
                      type: string
                      format: date-time
                      title: end_time specifies the end time of an auction
                    status:
                      title: status specifies the status of an auction
                      type: string
                      enum:
                        - AUCTION_STATUS_UNSPECIFIED
                        - AUCTION_STATUS_STARTED
                        - AUCTION_STATUS_FINISHED
                        - AUCTION_STATUS_SKIPPED
                      default: AUCTION_STATUS_UNSPECIFIED
                      description: |-
                        AuctionStatus enumerates the valid status of an auction.

                         - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                         - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                         - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                         - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
                    winner:
                      type: string
                      title: |-
                        winner specifies the bidder who won the auction
                        the value is determined when an auction is finished
                    winning_amount:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: >-
                        winning_amount specifies the winning amount for the
                        uaction
                    rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: >-
                        rewards specifies the farming rewards for are
                        accumulated in the farm module

                        the value is determined when an auction is finished
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    fee_rate:
                      type: string
                  description: >-
                    RewardsAuction defines rewards auction that is created by
                    the module

                    for every rewards_auction_duration in params.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryRewardsAuctionsResponse is response type for the
              Query/RewardsAuctions RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: status
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidfarming/v1beta1/liquidfarms/{pool_id}/rewards_auctions/{auction_id}':
    get:
      summary: RewardsAuction returns the specific rewards auction
      operationId: LiquidFarmingRewardsAuction
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards_auction:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                    title: id specifies the unique auction id
                  pool_id:
                    type: string
                    format: uint64
                    title: pool_id specifies the liquidity pool id
                  bidding_coin_denom:
                    type: string
                    title: bidding_coin_denom specifies the bidding coin denomination
                  paying_reserve_address:
                    type: string
                    title: >-
                      paying_reserve_address specfies the account that reserves
                      bidding amounts placed by bidders
                  start_time:
                    type: string
                    format: date-time
                    title: start_time specifies the start time of an auction
                  end_time:
                    type: string
                    format: date-time
                    title: end_time specifies the end time of an auction
                  status:
                    title: status specifies the status of an auction
                    type: string
                    enum:
                      - AUCTION_STATUS_UNSPECIFIED
                      - AUCTION_STATUS_STARTED
                      - AUCTION_STATUS_FINISHED
                      - AUCTION_STATUS_SKIPPED
                    default: AUCTION_STATUS_UNSPECIFIED
                    description: |-
                      AuctionStatus enumerates the valid status of an auction.

                       - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                       - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                       - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                       - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
                  winner:
                    type: string
                    title: |-
                      winner specifies the bidder who won the auction
                      the value is determined when an auction is finished
                  winning_amount:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    title: >-
                      winning_amount specifies the winning amount for the
                      uaction
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      rewards specifies the farming rewards for are accumulated
                      in the farm module

                      the value is determined when an auction is finished
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  fee_rate:
                    type: string
                description: >-
                  RewardsAuction defines rewards auction that is created by the
                  module

                  for every rewards_auction_duration in params.
            description: >-
              QueryRewardsAuctionResponse is response type for the
              Query/RewardsAuction RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: auction_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/liquidfarming/v1beta1/params:
    get:
      summary: Params returns parameters of the module
      operationId: LiquidFarmingParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  fee_collector:
                    type: string
                  rewards_auction_duration:
                    type: string
                  liquid_farms:
                    type: array
                    items:
                      type: object
                      properties:
                        pool_id:
                          type: string
                          format: uint64
                        min_farm_amount:
                          type: string
                        min_bid_amount:
                          type: string
                        fee_rate:
                          type: string
                      description: >-
                        LiquidFarm defines liquid farm object that provides auto
                        compounding functionality

                        for the liquidity pool and undergoes farming rewards
                        auction process.

                        See the technical spec for more detailed information.
                description: Params defines the parameters for the module.
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/liquidamm/v1beta1/params:
    get:
      summary: Params returns parameters of the module
      operationId: LiquidAMMParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  rewards_auction_duration:
                    type: string
                  max_num_recent_rewards_auctions:
                    type: integer
                    format: int64
                description: Params defines the parameters for the module.
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/liquidamm/v1beta1/public_positions:
    get:
      summary: PublicPositions returns all public positions registered in module
      operationId: PublicPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              public_positions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    pool_id:
                      type: string
                      format: uint64
                    lower_tick:
                      type: integer
                      format: int32
                    upper_tick:
                      type: integer
                      format: int32
                    bid_reserve_address:
                      type: string
                      title: >-
                        bid_reserve_address specifies the account that reserves
                        bidding amounts placed by bidders
                    min_bid_amount:
                      type: string
                    fee_rate:
                      type: string
                    last_rewards_auction_id:
                      type: string
                      format: uint64
                    liquidity:
                      type: string
                    position_id:
                      type: string
                      format: uint64
                    total_share:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  description: >-
                    PublicPositionResponse is response type for the
                    Query/PublicPosition RPC method.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryPublicPositionsResponse is response type for the
              Query/PublicPositions RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}':
    get:
      summary: PublicPosition returns the specific public position
      operationId: PublicPosition
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              public_position:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  pool_id:
                    type: string
                    format: uint64
                  lower_tick:
                    type: integer
                    format: int32
                  upper_tick:
                    type: integer
                    format: int32
                  bid_reserve_address:
                    type: string
                    title: >-
                      bid_reserve_address specifies the account that reserves
                      bidding amounts placed by bidders
                  min_bid_amount:
                    type: string
                  fee_rate:
                    type: string
                  last_rewards_auction_id:
                    type: string
                    format: uint64
                  liquidity:
                    type: string
                  position_id:
                    type: string
                    format: uint64
                  total_share:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                description: >-
                  PublicPositionResponse is response type for the
                  Query/PublicPosition RPC method.
            description: >-
              QueryPublicPositionResponse is response type for the
              Query/PublicPosition RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}/exchange_rate':
    get:
      summary: >-
        ExchangeRate returns exchange rates (mint rate and burn rate) for the
        public position
      operationId: LiquidAMMExchangeRate
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              mint_rate:
                type: string
              burn_rate:
                type: string
            description: >-
              QueryExchangeRateResponse is response type for the
              Query/ExchangeRate RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}/rewards':
    get:
      summary: Rewards returns all accumulated rewards for the public position
      operationId: LiquidAMMRewards
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            description: >-
              QueryRewardsResponse is response type for the Query/Rewards RPC
              method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}/rewards_auctions':
    get:
      summary: >-
        RewardsAuctions returns all rewards auctions that correspond to the
        given pool id
      operationId: LiquidAMMRewardsAuctions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards_auctions:
                type: array
                items:
                  type: object
                  properties:
                    public_position_id:
                      type: string
                      format: uint64
                      description: public_position_id specifies the public position's id.
                    id:
                      type: string
                      format: uint64
                      title: >-
                        id specifies the unique auction id in the public
                        position
                    start_time:
                      type: string
                      format: date-time
                      title: start_time specifies the start time of an auction
                    end_time:
                      type: string
                      format: date-time
                      title: end_time specifies the end time of an auction
                    status:
                      title: status specifies the status of an auction
                      type: string
                      enum:
                        - AUCTION_STATUS_UNSPECIFIED
                        - AUCTION_STATUS_STARTED
                        - AUCTION_STATUS_FINISHED
                        - AUCTION_STATUS_SKIPPED
                      default: AUCTION_STATUS_UNSPECIFIED
                      description: |-
                        AuctionStatus enumerates the valid status of an auction.

                         - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                         - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                         - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                         - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
                    winning_bid:
                      title: winning_bid specifies the winning bid
                      type: object
                      properties:
                        public_position_id:
                          type: string
                          format: uint64
                          title: >-
                            public_position_id specifies the public position's
                            id
                        rewards_auction_id:
                          type: string
                          format: uint64
                          title: rewards_auction_id specifies the reward auction's id
                        bidder:
                          type: string
                          title: >-
                            bidder specifies the bech32-encoded address that
                            places a bid for the auction
                        share:
                          type: object
                          properties:
                            denom:
                              type: string
                            amount:
                              type: string
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          title: share specifies the share amount to place a bid
                      description: Bid defines standard bid for a rewards auction.
                    rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                      title: >-
                        rewards specifies the rewards the winning bidder has
                        received

                        the value is determined when an auction is finished
                    fees:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                  description: >-
                    RewardsAuction defines rewards auction that is created by
                    the module

                    for every rewards_auction_duration in params.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: >-
              QueryRewardsAuctionsResponse is response type for the
              Query/RewardsAuctions RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
        - name: status
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}/rewards_auctions/{auction_id}':
    get:
      summary: RewardsAuction returns the specific rewards auction
      operationId: LiquidAMMRewardsAuction
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              rewards_auction:
                type: object
                properties:
                  public_position_id:
                    type: string
                    format: uint64
                    description: public_position_id specifies the public position's id.
                  id:
                    type: string
                    format: uint64
                    title: id specifies the unique auction id in the public position
                  start_time:
                    type: string
                    format: date-time
                    title: start_time specifies the start time of an auction
                  end_time:
                    type: string
                    format: date-time
                    title: end_time specifies the end time of an auction
                  status:
                    title: status specifies the status of an auction
                    type: string
                    enum:
                      - AUCTION_STATUS_UNSPECIFIED
                      - AUCTION_STATUS_STARTED
                      - AUCTION_STATUS_FINISHED
                      - AUCTION_STATUS_SKIPPED
                    default: AUCTION_STATUS_UNSPECIFIED
                    description: |-
                      AuctionStatus enumerates the valid status of an auction.

                       - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                       - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                       - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                       - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
                  winning_bid:
                    title: winning_bid specifies the winning bid
                    type: object
                    properties:
                      public_position_id:
                        type: string
                        format: uint64
                        title: public_position_id specifies the public position's id
                      rewards_auction_id:
                        type: string
                        format: uint64
                        title: rewards_auction_id specifies the reward auction's id
                      bidder:
                        type: string
                        title: >-
                          bidder specifies the bech32-encoded address that
                          places a bid for the auction
                      share:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        title: share specifies the share amount to place a bid
                    description: Bid defines standard bid for a rewards auction.
                  rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    title: >-
                      rewards specifies the rewards the winning bidder has
                      received

                      the value is determined when an auction is finished
                  fees:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                description: >-
                  RewardsAuction defines rewards auction that is created by the
                  module

                  for every rewards_auction_duration in params.
            description: >-
              QueryRewardsAuctionResponse is response type for the
              Query/RewardsAuction RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
        - name: auction_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/liquidamm/v1beta1/public_positions/{public_position_id}/rewards_auctions/{auction_id}/bids':
    get:
      summary: Bids returns all bids for the rewards auction
      operationId: LiquidAMMBids
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              bids:
                type: array
                items:
                  type: object
                  properties:
                    public_position_id:
                      type: string
                      format: uint64
                      title: public_position_id specifies the public position's id
                    rewards_auction_id:
                      type: string
                      format: uint64
                      title: rewards_auction_id specifies the reward auction's id
                    bidder:
                      type: string
                      title: >-
                        bidder specifies the bech32-encoded address that places
                        a bid for the auction
                    share:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      title: share specifies the share amount to place a bid
                  description: Bid defines standard bid for a rewards auction.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
            description: QueryBidsResponse is response type for the Query/Bids RPC method.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: public_position_id
          in: path
          required: true
          type: string
          format: uint64
        - name: auction_id
          in: path
          required: true
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  /crescent/marker/v1beta1/last_block_time:
    get:
      operationId: MarkerLastBlockTime
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              last_block_time:
                type: string
                format: date-time
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/marker/v1beta1/params:
    get:
      operationId: MarkerParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/exchange/v1beta1/best_swap_exact_amount_in_routes:
    get:
      operationId: BestSwapExactAmountInRoutes
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              routes:
                type: array
                items:
                  type: string
                  format: uint64
              output:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              results:
                type: array
                items:
                  type: object
                  properties:
                    market_id:
                      type: string
                      format: uint64
                    executed_quantity:
                      type: string
                    input:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    paid:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    received:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    fee_paid:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    fee_received:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: input
          in: query
          required: false
          type: string
        - name: output_denom
          in: query
          required: false
          type: string
      tags:
        - Query
  /crescent/exchange/v1beta1/markets:
    get:
      operationId: AllMarkets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              markets:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    base_denom:
                      type: string
                    quote_denom:
                      type: string
                    escrow_address:
                      type: string
                    fee_collector:
                      type: string
                    fees:
                      type: object
                      properties:
                        maker_fee_rate:
                          type: string
                        taker_fee_rate:
                          type: string
                        order_source_fee_ratio:
                          type: string
                    order_quantity_limits:
                      type: object
                      properties:
                        min:
                          type: string
                        max:
                          type: string
                    order_quote_limits:
                      type: object
                      properties:
                        min:
                          type: string
                        max:
                          type: string
                    last_price:
                      type: string
                    last_matching_height:
                      type: string
                      format: int64
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/exchange/v1beta1/markets/{market_id}':
    get:
      operationId: Market
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              market:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  base_denom:
                    type: string
                  quote_denom:
                    type: string
                  escrow_address:
                    type: string
                  fee_collector:
                    type: string
                  fees:
                    type: object
                    properties:
                      maker_fee_rate:
                        type: string
                      taker_fee_rate:
                        type: string
                      order_source_fee_ratio:
                        type: string
                  order_quantity_limits:
                    type: object
                    properties:
                      min:
                        type: string
                      max:
                        type: string
                  order_quote_limits:
                    type: object
                    properties:
                      min:
                        type: string
                      max:
                        type: string
                  last_price:
                    type: string
                  last_matching_height:
                    type: string
                    format: int64
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/exchange/v1beta1/markets/{market_id}/order_book':
    get:
      operationId: OrderBook
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              order_books:
                type: array
                items:
                  type: object
                  properties:
                    price_interval:
                      type: string
                    sells:
                      type: array
                      items:
                        type: object
                        properties:
                          p:
                            type: string
                            title: p denotes price
                          q:
                            type: string
                            title: q denotes quantity
                    buys:
                      type: array
                      items:
                        type: object
                        properties:
                          p:
                            type: string
                            title: p denotes price
                          q:
                            type: string
                            title: q denotes quantity
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/exchange/v1beta1/orders:
    get:
      operationId: AllOrders
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              orders:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    type:
                      type: string
                      enum:
                        - ORDER_TYPE_UNSPECIFIED
                        - ORDER_TYPE_LIMIT
                        - ORDER_TYPE_MM
                      default: ORDER_TYPE_UNSPECIFIED
                    orderer:
                      type: string
                    market_id:
                      type: string
                      format: uint64
                    is_buy:
                      type: boolean
                      format: boolean
                    price:
                      type: string
                    quantity:
                      type: string
                    msg_height:
                      type: string
                      format: int64
                    open_quantity:
                      type: string
                    remaining_deposit:
                      type: string
                    deadline:
                      type: string
                      format: date-time
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: orderer
          in: query
          required: false
          type: string
        - name: market_id
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/exchange/v1beta1/orders/{order_id}':
    get:
      operationId: ExchangeOrder
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              order:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  type:
                    type: string
                    enum:
                      - ORDER_TYPE_UNSPECIFIED
                      - ORDER_TYPE_LIMIT
                      - ORDER_TYPE_MM
                    default: ORDER_TYPE_UNSPECIFIED
                  orderer:
                    type: string
                  market_id:
                    type: string
                    format: uint64
                  is_buy:
                    type: boolean
                    format: boolean
                  price:
                    type: string
                  quantity:
                    type: string
                  msg_height:
                    type: string
                    format: int64
                  open_quantity:
                    type: string
                  remaining_deposit:
                    type: string
                  deadline:
                    type: string
                    format: date-time
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: order_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/exchange/v1beta1/params:
    get:
      operationId: ExchangeParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  market_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  default_fees:
                    type: object
                    properties:
                      maker_fee_rate:
                        type: string
                      taker_fee_rate:
                        type: string
                      order_source_fee_ratio:
                        type: string
                  max_order_lifespan:
                    type: string
                  max_order_price_ratio:
                    type: string
                    title: >-
                      max_order_price_ratio defines the ratio of the maximum
                      possible order price compared to the market's last price
                  default_order_quantity_limits:
                    type: object
                    properties:
                      min:
                        type: string
                      max:
                        type: string
                  default_order_quote_limits:
                    type: object
                    properties:
                      min:
                        type: string
                      max:
                        type: string
                  max_swap_routes_len:
                    type: integer
                    format: int64
                  max_num_mm_orders:
                    type: integer
                    format: int64
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/amm/v1beta1/collectible_coins:
    get:
      operationId: CollectibleCoins
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              fee:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
              farming_rewards:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: owner
          in: query
          required: false
          type: string
        - name: position_id
          in: query
          required: false
          type: string
          format: uint64
      tags:
        - Query
  /crescent/amm/v1beta1/farming_plans:
    get:
      operationId: AllFarmingPlans
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              farming_plans:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    description:
                      type: string
                    farming_pool_address:
                      type: string
                    termination_address:
                      type: string
                    reward_allocations:
                      type: array
                      items:
                        type: object
                        properties:
                          pool_id:
                            type: string
                            format: uint64
                          rewards_per_day:
                            type: array
                            items:
                              type: object
                              properties:
                                denom:
                                  type: string
                                amount:
                                  type: string
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                    start_time:
                      type: string
                      format: date-time
                    end_time:
                      type: string
                      format: date-time
                    is_private:
                      type: boolean
                      format: boolean
                    is_terminated:
                      type: boolean
                      format: boolean
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: is_private
          in: query
          required: false
          type: string
        - name: is_terminated
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/amm/v1beta1/farming_plans/{plan_id}':
    get:
      operationId: FarmingPlan
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              farming_plan:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  description:
                    type: string
                  farming_pool_address:
                    type: string
                  termination_address:
                    type: string
                  reward_allocations:
                    type: array
                    items:
                      type: object
                      properties:
                        pool_id:
                          type: string
                          format: uint64
                        rewards_per_day:
                          type: array
                          items:
                            type: object
                            properties:
                              denom:
                                type: string
                              amount:
                                type: string
                            description: >-
                              Coin defines a token with a denomination and an
                              amount.


                              NOTE: The amount field is an Int which implements
                              the custom method

                              signatures required by gogoproto.
                  start_time:
                    type: string
                    format: date-time
                  end_time:
                    type: string
                    format: date-time
                  is_private:
                    type: boolean
                    format: boolean
                  is_terminated:
                    type: boolean
                    format: boolean
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: plan_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/amm/v1beta1/params:
    get:
      operationId: AMMParams
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              params:
                type: object
                properties:
                  pool_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  default_tick_spacing:
                    type: integer
                    format: int64
                  private_farming_plan_creation_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  max_num_private_farming_plans:
                    type: integer
                    format: int64
                  max_farming_block_time:
                    type: string
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      tags:
        - Query
  /crescent/amm/v1beta1/pools:
    get:
      operationId: AllPools
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pools:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    market_id:
                      type: string
                      format: uint64
                    balance0:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    balance1:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                    reserve_address:
                      type: string
                    rewards_pool:
                      type: string
                    tick_spacing:
                      type: integer
                      format: int64
                    current_tick:
                      type: integer
                      format: int32
                    current_price:
                      type: string
                    current_liquidity:
                      type: string
                    total_liquidity:
                      type: string
                    fee_growth_global:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                    farming_rewards_growth_global:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: market_id
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/amm/v1beta1/pools/{pool_id}':
    get:
      operationId: Pool
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              pool:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  market_id:
                    type: string
                    format: uint64
                  balance0:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  balance1:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                  reserve_address:
                    type: string
                  rewards_pool:
                    type: string
                  tick_spacing:
                    type: integer
                    format: int64
                  current_tick:
                    type: integer
                    format: int32
                  current_price:
                    type: string
                  current_liquidity:
                    type: string
                  total_liquidity:
                    type: string
                  fee_growth_global:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  farming_rewards_growth_global:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/amm/v1beta1/pools/{pool_id}/tick_infos':
    get:
      operationId: AllTickInfos
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tick_infos:
                type: array
                items:
                  type: object
                  properties:
                    tick:
                      type: integer
                      format: int32
                    gross_liquidity:
                      type: string
                    net_liquidity:
                      type: string
                    fee_growth_outside:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                    farming_rewards_growth_outside:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: lower_tick
          in: query
          required: false
          type: string
        - name: upper_tick
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/amm/v1beta1/pools/{pool_id}/tick_infos/{tick}':
    get:
      operationId: TickInfo
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              tick_info:
                type: object
                properties:
                  tick:
                    type: integer
                    format: int32
                  gross_liquidity:
                    type: string
                  net_liquidity:
                    type: string
                  fee_growth_outside:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  farming_rewards_growth_outside:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: path
          required: true
          type: string
          format: uint64
        - name: tick
          in: path
          required: true
          type: integer
          format: int32
      tags:
        - Query
  /crescent/amm/v1beta1/positions:
    get:
      operationId: AllPositions
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              positions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uint64
                    pool_id:
                      type: string
                      format: uint64
                    owner:
                      type: string
                    lower_price:
                      type: string
                    upper_price:
                      type: string
                    liquidity:
                      type: string
                    last_fee_growth_inside:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                    owed_fee:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                    last_farming_rewards_growth_inside:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          DecCoin defines a token with a denomination and a
                          decimal amount.


                          NOTE: The amount field is an Dec which implements the
                          custom method

                          signatures required by gogoproto.
                    owed_farming_rewards:
                      type: array
                      items:
                        type: object
                        properties:
                          denom:
                            type: string
                          amount:
                            type: string
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
              pagination:
                type: object
                properties:
                  next_key:
                    type: string
                    format: byte
                    title: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently
                  total:
                    type: string
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: query
          required: false
          type: string
          format: uint64
        - name: owner
          in: query
          required: false
          type: string
        - name: pagination.key
          description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          in: query
          required: false
          type: string
          format: byte
        - name: pagination.offset
          description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.limit
          description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          in: query
          required: false
          type: string
          format: uint64
        - name: pagination.count_total
          description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          required: false
          type: boolean
          format: boolean
        - name: pagination.reverse
          description: >-
            reverse is set to true if results are to be returned in the
            descending

            order.
          in: query
          required: false
          type: boolean
          format: boolean
      tags:
        - Query
  '/crescent/amm/v1beta1/positions/{position_id}':
    get:
      operationId: APPPosition
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              position:
                type: object
                properties:
                  id:
                    type: string
                    format: uint64
                  pool_id:
                    type: string
                    format: uint64
                  owner:
                    type: string
                  lower_price:
                    type: string
                  upper_price:
                    type: string
                  liquidity:
                    type: string
                  last_fee_growth_inside:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  owed_fee:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                  last_farming_rewards_growth_inside:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                  owed_farming_rewards:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: position_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  '/crescent/amm/v1beta1/positions/{position_id}/assets':
    get:
      operationId: PositionAssets
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              coin0:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              coin1:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: position_id
          in: path
          required: true
          type: string
          format: uint64
      tags:
        - Query
  /crescent/amm/v1beta1/simulation/add_liquidity:
    get:
      operationId: AddLiquiditySimulation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              liquidity:
                type: string
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: pool_id
          in: query
          required: false
          type: string
          format: uint64
        - name: lower_price
          in: query
          required: false
          type: string
        - name: upper_price
          in: query
          required: false
          type: string
        - name: desired_amount
          in: query
          required: false
          type: string
      tags:
        - Query
  /crescent/amm/v1beta1/simulation/remove_liquidity:
    get:
      operationId: RemoveLiquiditySimulation
      responses:
        '200':
          description: A successful response.
          schema:
            type: object
            properties:
              amount:
                type: array
                items:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
        default:
          description: An unexpected error response
          schema:
            type: object
            properties:
              error:
                type: string
              code:
                type: integer
                format: int32
              message:
                type: string
              details:
                type: array
                items:
                  type: object
                  properties:
                    type_url:
                      type: string
                    value:
                      type: string
                      format: byte
      parameters:
        - name: position_id
          in: query
          required: false
          type: string
          format: uint64
        - name: liquidity
          in: query
          required: false
          type: string
      tags:
        - Query
definitions:
  cosmos.base.query.v1beta1.PageRequest:
    type: object
    properties:
      key:
        type: string
        format: byte
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
      offset:
        type: string
        format: uint64
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
      limit:
        type: string
        format: uint64
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
      count_total:
        type: boolean
        format: boolean
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
      reverse:
        type: boolean
        format: boolean
        description: |-
          reverse is set to true if results are to be returned in the descending
          order.
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
  cosmos.base.query.v1beta1.PageResponse:
    type: object
    properties:
      next_key:
        type: string
        format: byte
        title: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently
      total:
        type: string
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
  cosmos.base.v1beta1.Coin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
  cosmos.base.v1beta1.DecCoin:
    type: object
    properties:
      denom:
        type: string
      amount:
        type: string
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
  crescent.farming.v1beta1.HistoricalRewardsResponse:
    type: object
    properties:
      epoch:
        type: string
        format: uint64
      cumulative_unit_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
  crescent.farming.v1beta1.Params:
    type: object
    properties:
      private_plan_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: |-
          private_plan_creation_fee specifies the fee for plan creation
          this fee prevents from spamming and is collected in the community pool
      next_epoch_days:
        type: integer
        format: int64
        title: >-
          next_epoch_days is the epoch length in number of days

          it updates internal state called CurrentEpochDays that is used to
          process

          staking and reward distribution in end blocker
      farming_fee_collector:
        type: string
        title: >-
          farming_fee_collector is the module account address to collect fees
          within the farming module
      delayed_staking_gas_fee:
        type: string
        format: uint64
        title: >-
          delayed_staking_gas_fee is used to impose gas fee for the delayed
          staking
      max_num_private_plans:
        type: integer
        format: int64
        title: max_num_private_plans is the maximum number of active private plans
    description: Params defines the set of params for the farming module.
  crescent.farming.v1beta1.QueryCurrentEpochDaysResponse:
    type: object
    properties:
      current_epoch_days:
        type: integer
        format: int64
    description: >-
      QueryCurrentEpochDaysResponse is the response type for the
      Query/CurrentEpochDays RPC method.
  crescent.farming.v1beta1.QueryHistoricalRewardsResponse:
    type: object
    properties:
      historical_rewards:
        type: array
        items:
          type: object
          properties:
            epoch:
              type: string
              format: uint64
            cumulative_unit_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryHistoricalRewardsResponse is the response type for the
      Query/HistoricalRewards RPC method.
  crescent.farming.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          private_plan_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: >-
              private_plan_creation_fee specifies the fee for plan creation

              this fee prevents from spamming and is collected in the community
              pool
          next_epoch_days:
            type: integer
            format: int64
            title: >-
              next_epoch_days is the epoch length in number of days

              it updates internal state called CurrentEpochDays that is used to
              process

              staking and reward distribution in end blocker
          farming_fee_collector:
            type: string
            title: >-
              farming_fee_collector is the module account address to collect
              fees within the farming module
          delayed_staking_gas_fee:
            type: string
            format: uint64
            title: >-
              delayed_staking_gas_fee is used to impose gas fee for the delayed
              staking
          max_num_private_plans:
            type: integer
            format: int64
            title: >-
              max_num_private_plans is the maximum number of active private
              plans
        description: Params defines the set of params for the farming module.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  crescent.farming.v1beta1.QueryPlanResponse:
    type: object
    properties:
      plan:
        type: object
        properties:
          type_url:
            type: string
            description: >-
              A URL/resource name that uniquely identifies the type of the
              serialized

              protocol buffer message. This string must contain at least

              one "/" character. The last segment of the URL's path must
              represent

              the fully qualified name of the type (as in

              `path/google.protobuf.Duration`). The name should be in a
              canonical form

              (e.g., leading "." is not accepted).


              In practice, teams usually precompile into the binary all types
              that they

              expect it to use in the context of Any. However, for URLs which
              use the

              scheme `http`, `https`, or no scheme, one can optionally set up a
              type

              server that maps type URLs to message definitions as follows:


              * If no scheme is provided, `https` is assumed.

              * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                value in binary format, or produce an error.
              * Applications are allowed to cache lookup results based on the
                URL, or have them precompiled into a binary to avoid any
                lookup. Therefore, binary compatibility needs to be preserved
                on changes to types. (Use versioned type names to manage
                breaking changes.)

              Note: this functionality is not currently available in the
              official

              protobuf release, and it is not used for type URLs beginning with

              type.googleapis.com.


              Schemes other than `http`, `https` (or the empty scheme) might be

              used with implementation specific semantics.
          value:
            type: string
            format: byte
            description: >-
              Must be a valid serialized protocol buffer of the above specified
              type.
        description: >-
          `Any` contains an arbitrary serialized protocol buffer message along
          with a

          URL that describes the type of the serialized message.


          Protobuf library provides support to pack/unpack Any values in the
          form

          of utility functions or additional generated methods of the Any type.


          Example 1: Pack and unpack a message in C++.

              Foo foo = ...;
              Any any;
              any.PackFrom(foo);
              ...
              if (any.UnpackTo(&foo)) {
                ...
              }

          Example 2: Pack and unpack a message in Java.

              Foo foo = ...;
              Any any = Any.pack(foo);
              ...
              if (any.is(Foo.class)) {
                foo = any.unpack(Foo.class);
              }

           Example 3: Pack and unpack a message in Python.

              foo = Foo(...)
              any = Any()
              any.Pack(foo)
              ...
              if any.Is(Foo.DESCRIPTOR):
                any.Unpack(foo)
                ...

           Example 4: Pack and unpack a message in Go

               foo := &pb.Foo{...}
               any, err := ptypes.MarshalAny(foo)
               ...
               foo := &pb.Foo{}
               if err := ptypes.UnmarshalAny(any, foo); err != nil {
                 ...
               }

          The pack methods provided by protobuf library will by default use

          'type.googleapis.com/full.type.name' as the type URL and the unpack

          methods only use the fully qualified type name after the last '/'

          in the type URL, for example "foo.bar.com/x/y.z" will yield type

          name "y.z".



          JSON

          ====

          The JSON representation of an `Any` value uses the regular

          representation of the deserialized, embedded message, with an

          additional field `@type` which contains the type URL. Example:

              package google.profile;
              message Person {
                string first_name = 1;
                string last_name = 2;
              }

              {
                "@type": "type.googleapis.com/google.profile.Person",
                "firstName": <string>,
                "lastName": <string>
              }

          If the embedded message type is well-known and has a custom JSON

          representation, that representation will be embedded adding a field

          `value` which holds the custom JSON in addition to the `@type`

          field. Example (for message [google.protobuf.Duration][]):

              {
                "@type": "type.googleapis.com/google.protobuf.Duration",
                "value": "1.212s"
              }
    description: QueryPlanResponse is the response type for the Query/Plan RPC method.
  crescent.farming.v1beta1.QueryPlansResponse:
    type: object
    properties:
      plans:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
        title: plans are the existing plans
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryPlansResponse is the response type for the Query/Plans RPC method.
  crescent.farming.v1beta1.QueryPositionResponse:
    type: object
    properties:
      staked_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      queued_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: >-
      QueryPositionResponse is the response type for the Query/Position RPC
      method.
  crescent.farming.v1beta1.QueryQueuedStakingsResponse:
    type: object
    properties:
      queued_stakings:
        type: array
        items:
          type: object
          properties:
            staking_coin_denom:
              type: string
            amount:
              type: string
            end_time:
              type: string
              format: date-time
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryQueuedStakingsResponse is the response type for the
      Query/QueuedStakings RPC method.
  crescent.farming.v1beta1.QueryRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            staking_coin_denom:
              type: string
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryRewardsResponse is the response type for the Query/Rewards RPC
      method.
  crescent.farming.v1beta1.QueryStakingsResponse:
    type: object
    properties:
      stakings:
        type: array
        items:
          type: object
          properties:
            staking_coin_denom:
              type: string
            amount:
              type: string
            starting_epoch:
              type: string
              format: uint64
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryStakingsResponse is the response type for the Query/Stakings RPC
      method.
  crescent.farming.v1beta1.QueryTotalStakingsResponse:
    type: object
    properties:
      amount:
        type: string
    description: >-
      QueryTotalStakingsResponse is the response type for the
      Query/TotalStakings RPC method.
  crescent.farming.v1beta1.QueryUnharvestedRewardsResponse:
    type: object
    properties:
      unharvested_rewards:
        type: array
        items:
          type: object
          properties:
            staking_coin_denom:
              type: string
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryUnharvestedRewardsResponse is the response type for the
      Query/UnharvestedRewards RPC method.
  crescent.farming.v1beta1.QueuedStakingResponse:
    type: object
    properties:
      staking_coin_denom:
        type: string
      amount:
        type: string
      end_time:
        type: string
        format: date-time
  crescent.farming.v1beta1.RewardsResponse:
    type: object
    properties:
      staking_coin_denom:
        type: string
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.farming.v1beta1.StakingResponse:
    type: object
    properties:
      staking_coin_denom:
        type: string
      amount:
        type: string
      starting_epoch:
        type: string
        format: uint64
  crescent.farming.v1beta1.UnharvestedRewardsResponse:
    type: object
    properties:
      staking_coin_denom:
        type: string
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  google.protobuf.Any:
    type: object
    properties:
      type_url:
        type: string
        description: >-
          A URL/resource name that uniquely identifies the type of the
          serialized

          protocol buffer message. This string must contain at least

          one "/" character. The last segment of the URL's path must represent

          the fully qualified name of the type (as in

          `path/google.protobuf.Duration`). The name should be in a canonical
          form

          (e.g., leading "." is not accepted).


          In practice, teams usually precompile into the binary all types that
          they

          expect it to use in the context of Any. However, for URLs which use
          the

          scheme `http`, `https`, or no scheme, one can optionally set up a type

          server that maps type URLs to message definitions as follows:


          * If no scheme is provided, `https` is assumed.

          * An HTTP GET on the URL must yield a [google.protobuf.Type][]
            value in binary format, or produce an error.
          * Applications are allowed to cache lookup results based on the
            URL, or have them precompiled into a binary to avoid any
            lookup. Therefore, binary compatibility needs to be preserved
            on changes to types. (Use versioned type names to manage
            breaking changes.)

          Note: this functionality is not currently available in the official

          protobuf release, and it is not used for type URLs beginning with

          type.googleapis.com.


          Schemes other than `http`, `https` (or the empty scheme) might be

          used with implementation specific semantics.
      value:
        type: string
        format: byte
        description: >-
          Must be a valid serialized protocol buffer of the above specified
          type.
    description: >-
      `Any` contains an arbitrary serialized protocol buffer message along with
      a

      URL that describes the type of the serialized message.


      Protobuf library provides support to pack/unpack Any values in the form

      of utility functions or additional generated methods of the Any type.


      Example 1: Pack and unpack a message in C++.

          Foo foo = ...;
          Any any;
          any.PackFrom(foo);
          ...
          if (any.UnpackTo(&foo)) {
            ...
          }

      Example 2: Pack and unpack a message in Java.

          Foo foo = ...;
          Any any = Any.pack(foo);
          ...
          if (any.is(Foo.class)) {
            foo = any.unpack(Foo.class);
          }

       Example 3: Pack and unpack a message in Python.

          foo = Foo(...)
          any = Any()
          any.Pack(foo)
          ...
          if any.Is(Foo.DESCRIPTOR):
            any.Unpack(foo)
            ...

       Example 4: Pack and unpack a message in Go

           foo := &pb.Foo{...}
           any, err := ptypes.MarshalAny(foo)
           ...
           foo := &pb.Foo{}
           if err := ptypes.UnmarshalAny(any, foo); err != nil {
             ...
           }

      The pack methods provided by protobuf library will by default use

      'type.googleapis.com/full.type.name' as the type URL and the unpack

      methods only use the fully qualified type name after the last '/'

      in the type URL, for example "foo.bar.com/x/y.z" will yield type

      name "y.z".



      JSON

      ====

      The JSON representation of an `Any` value uses the regular

      representation of the deserialized, embedded message, with an

      additional field `@type` which contains the type URL. Example:

          package google.profile;
          message Person {
            string first_name = 1;
            string last_name = 2;
          }

          {
            "@type": "type.googleapis.com/google.profile.Person",
            "firstName": <string>,
            "lastName": <string>
          }

      If the embedded message type is well-known and has a custom JSON

      representation, that representation will be embedded adding a field

      `value` which holds the custom JSON in addition to the `@type`

      field. Example (for message [google.protobuf.Duration][]):

          {
            "@type": "type.googleapis.com/google.protobuf.Duration",
            "value": "1.212s"
          }
  grpc.gateway.runtime.Error:
    type: object
    properties:
      error:
        type: string
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          properties:
            type_url:
              type: string
              description: >-
                A URL/resource name that uniquely identifies the type of the
                serialized

                protocol buffer message. This string must contain at least

                one "/" character. The last segment of the URL's path must
                represent

                the fully qualified name of the type (as in

                `path/google.protobuf.Duration`). The name should be in a
                canonical form

                (e.g., leading "." is not accepted).


                In practice, teams usually precompile into the binary all types
                that they

                expect it to use in the context of Any. However, for URLs which
                use the

                scheme `http`, `https`, or no scheme, one can optionally set up
                a type

                server that maps type URLs to message definitions as follows:


                * If no scheme is provided, `https` is assumed.

                * An HTTP GET on the URL must yield a [google.protobuf.Type][]
                  value in binary format, or produce an error.
                * Applications are allowed to cache lookup results based on the
                  URL, or have them precompiled into a binary to avoid any
                  lookup. Therefore, binary compatibility needs to be preserved
                  on changes to types. (Use versioned type names to manage
                  breaking changes.)

                Note: this functionality is not currently available in the
                official

                protobuf release, and it is not used for type URLs beginning
                with

                type.googleapis.com.


                Schemes other than `http`, `https` (or the empty scheme) might
                be

                used with implementation specific semantics.
            value:
              type: string
              format: byte
              description: >-
                Must be a valid serialized protocol buffer of the above
                specified type.
          description: >-
            `Any` contains an arbitrary serialized protocol buffer message along
            with a

            URL that describes the type of the serialized message.


            Protobuf library provides support to pack/unpack Any values in the
            form

            of utility functions or additional generated methods of the Any
            type.


            Example 1: Pack and unpack a message in C++.

                Foo foo = ...;
                Any any;
                any.PackFrom(foo);
                ...
                if (any.UnpackTo(&foo)) {
                  ...
                }

            Example 2: Pack and unpack a message in Java.

                Foo foo = ...;
                Any any = Any.pack(foo);
                ...
                if (any.is(Foo.class)) {
                  foo = any.unpack(Foo.class);
                }

             Example 3: Pack and unpack a message in Python.

                foo = Foo(...)
                any = Any()
                any.Pack(foo)
                ...
                if any.Is(Foo.DESCRIPTOR):
                  any.Unpack(foo)
                  ...

             Example 4: Pack and unpack a message in Go

                 foo := &pb.Foo{...}
                 any, err := ptypes.MarshalAny(foo)
                 ...
                 foo := &pb.Foo{}
                 if err := ptypes.UnmarshalAny(any, foo); err != nil {
                   ...
                 }

            The pack methods provided by protobuf library will by default use

            'type.googleapis.com/full.type.name' as the type URL and the unpack

            methods only use the fully qualified type name after the last '/'

            in the type URL, for example "foo.bar.com/x/y.z" will yield type

            name "y.z".



            JSON

            ====

            The JSON representation of an `Any` value uses the regular

            representation of the deserialized, embedded message, with an

            additional field `@type` which contains the type URL. Example:

                package google.profile;
                message Person {
                  string first_name = 1;
                  string last_name = 2;
                }

                {
                  "@type": "type.googleapis.com/google.profile.Person",
                  "firstName": <string>,
                  "lastName": <string>
                }

            If the embedded message type is well-known and has a custom JSON

            representation, that representation will be embedded adding a field

            `value` which holds the custom JSON in addition to the `@type`

            field. Example (for message [google.protobuf.Duration][]):

                {
                  "@type": "type.googleapis.com/google.protobuf.Duration",
                  "value": "1.212s"
                }
  crescent.liquidity.v1beta1.DepositRequest:
    type: object
    properties:
      id:
        type: string
        format: uint64
        title: id specifies the id for the request
      pool_id:
        type: string
        format: uint64
        title: pool_id specifies the pool id
      msg_height:
        type: string
        format: int64
        title: >-
          msg_height specifies the block height when the request is stored for
          the batch execution
      depositor:
        type: string
        title: >-
          depositor specifies the bech32-encoded address that makes a deposit to
          the pool
      deposit_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: deposit_coins specifies the amount of coins to deposit.
      accepted_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: accepted_coins specifies the amount of coins that are accepted.
      minted_pool_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      status:
        type: string
        enum:
          - REQUEST_STATUS_UNSPECIFIED
          - REQUEST_STATUS_NOT_EXECUTED
          - REQUEST_STATUS_SUCCEEDED
          - REQUEST_STATUS_FAILED
        default: REQUEST_STATUS_UNSPECIFIED
        description: |-
          RequestStatus enumerates request statuses.

           - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
           - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
           - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
           - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
    description: DepositRequest defines a deposit request.
  crescent.liquidity.v1beta1.Order:
    type: object
    properties:
      type:
        title: type specifies the typo of the order
        type: string
        enum:
          - ORDER_TYPE_UNSPECIFIED
          - ORDER_TYPE_LIMIT
          - ORDER_TYPE_MARKET
          - ORDER_TYPE_MM
        default: ORDER_TYPE_UNSPECIFIED
        description: |-
          OrderType enumerates order types.

           - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
           - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
           - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
           - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
      id:
        type: string
        format: uint64
        title: id specifies the id of the order
      pair_id:
        type: string
        format: uint64
        title: pair_id specifies the pair id
      msg_height:
        type: string
        format: int64
        title: >-
          msg_height specifies the block height when the order is stored for the
          batch execution
      orderer:
        type: string
        title: orderer specifies the bech32-encoded address that makes an order
      direction:
        title: direction specifies the order direction; either buy or sell
        type: string
        enum:
          - ORDER_DIRECTION_UNSPECIFIED
          - ORDER_DIRECTION_BUY
          - ORDER_DIRECTION_SELL
        default: ORDER_DIRECTION_UNSPECIFIED
        description: |-
          OrderDirection enumerates order directions.

           - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
           - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
           - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
      offer_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      remaining_offer_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: remaining_offer_coin specifies the remaining offer coin
      received_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: received_coin specifies the received coin after the swap
      price:
        type: string
        title: price specifies the price that an orderer is willing to swap
      amount:
        type: string
      open_amount:
        type: string
      batch_id:
        type: string
        format: uint64
        title: batch_id specifies the pair's batch id when the request is stored
      expire_at:
        type: string
        format: date-time
      status:
        type: string
        enum:
          - ORDER_STATUS_UNSPECIFIED
          - ORDER_STATUS_NOT_EXECUTED
          - ORDER_STATUS_NOT_MATCHED
          - ORDER_STATUS_PARTIALLY_MATCHED
          - ORDER_STATUS_COMPLETED
          - ORDER_STATUS_CANCELED
          - ORDER_STATUS_EXPIRED
        default: ORDER_STATUS_UNSPECIFIED
        description: |-
          OrderStatus enumerates order statuses.

           - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
           - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
           - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
           - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
           - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
           - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
           - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
    description: Order defines an order.
  crescent.liquidity.v1beta1.OrderBookPairResponse:
    type: object
    properties:
      pair_id:
        type: string
        format: uint64
      base_price:
        type: string
      order_books:
        type: array
        items:
          type: object
          properties:
            price_unit:
              type: string
            sells:
              type: array
              items:
                type: object
                properties:
                  price:
                    type: string
                  user_order_amount:
                    type: string
                  pool_order_amount:
                    type: string
            buys:
              type: array
              items:
                type: object
                properties:
                  price:
                    type: string
                  user_order_amount:
                    type: string
                  pool_order_amount:
                    type: string
  crescent.liquidity.v1beta1.OrderBookResponse:
    type: object
    properties:
      price_unit:
        type: string
      sells:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
            user_order_amount:
              type: string
            pool_order_amount:
              type: string
      buys:
        type: array
        items:
          type: object
          properties:
            price:
              type: string
            user_order_amount:
              type: string
            pool_order_amount:
              type: string
  crescent.liquidity.v1beta1.OrderBookTickResponse:
    type: object
    properties:
      price:
        type: string
      user_order_amount:
        type: string
      pool_order_amount:
        type: string
  crescent.liquidity.v1beta1.OrderDirection:
    type: string
    enum:
      - ORDER_DIRECTION_UNSPECIFIED
      - ORDER_DIRECTION_BUY
      - ORDER_DIRECTION_SELL
    default: ORDER_DIRECTION_UNSPECIFIED
    description: |-
      OrderDirection enumerates order directions.

       - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
       - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
       - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
  crescent.liquidity.v1beta1.OrderStatus:
    type: string
    enum:
      - ORDER_STATUS_UNSPECIFIED
      - ORDER_STATUS_NOT_EXECUTED
      - ORDER_STATUS_NOT_MATCHED
      - ORDER_STATUS_PARTIALLY_MATCHED
      - ORDER_STATUS_COMPLETED
      - ORDER_STATUS_CANCELED
      - ORDER_STATUS_EXPIRED
    default: ORDER_STATUS_UNSPECIFIED
    description: |-
      OrderStatus enumerates order statuses.

       - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
       - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
       - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
       - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
       - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
       - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
       - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
  crescent.liquidity.v1beta1.OrderType:
    type: string
    enum:
      - ORDER_TYPE_UNSPECIFIED
      - ORDER_TYPE_LIMIT
      - ORDER_TYPE_MARKET
      - ORDER_TYPE_MM
    default: ORDER_TYPE_UNSPECIFIED
    description: |-
      OrderType enumerates order types.

       - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
       - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
       - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
       - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
  crescent.liquidity.v1beta1.Pair:
    type: object
    properties:
      id:
        type: string
        format: uint64
      base_coin_denom:
        type: string
      quote_coin_denom:
        type: string
      escrow_address:
        type: string
      last_order_id:
        type: string
        format: uint64
      last_price:
        type: string
      current_batch_id:
        type: string
        format: uint64
    description: Pair defines a coin pair.
  crescent.liquidity.v1beta1.Params:
    type: object
    properties:
      batch_size:
        type: integer
        format: int64
      tick_precision:
        type: integer
        format: int64
      fee_collector_address:
        type: string
      dust_collector_address:
        type: string
      min_initial_pool_coin_supply:
        type: string
      pair_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      pool_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      min_initial_deposit_amount:
        type: string
      max_price_limit_ratio:
        type: string
      max_num_market_making_order_ticks:
        type: integer
        format: int64
      max_num_market_making_orders_per_pair:
        type: integer
        format: int64
      max_order_lifespan:
        type: string
      swap_fee_rate:
        type: string
      withdraw_fee_rate:
        type: string
      deposit_extra_gas:
        type: string
        format: uint64
      withdraw_extra_gas:
        type: string
        format: uint64
      order_extra_gas:
        type: string
        format: uint64
      max_num_active_pools_per_pair:
        type: integer
        format: int64
    description: Params defines the parameters for the liquidity module.
  crescent.liquidity.v1beta1.PoolBalances:
    type: object
    properties:
      base_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      quote_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  crescent.liquidity.v1beta1.PoolResponse:
    type: object
    properties:
      type:
        type: string
        enum:
          - POOL_TYPE_UNSPECIFIED
          - POOL_TYPE_BASIC
          - POOL_TYPE_RANGED
        default: POOL_TYPE_UNSPECIFIED
        description: |-
          PoolType enumerates pool types.

           - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
           - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
           - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
      id:
        type: string
        format: uint64
      pair_id:
        type: string
        format: uint64
      creator:
        type: string
      reserve_address:
        type: string
      pool_coin_denom:
        type: string
      pool_coin_supply:
        type: string
      min_price:
        type: string
      max_price:
        type: string
      price:
        type: string
      balances:
        type: object
        properties:
          base_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          quote_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
      last_deposit_request_id:
        type: string
        format: uint64
      last_withdraw_request_id:
        type: string
        format: uint64
      disabled:
        type: boolean
        format: boolean
    description: PoolResponse defines a custom pool response message.
  crescent.liquidity.v1beta1.PoolType:
    type: string
    enum:
      - POOL_TYPE_UNSPECIFIED
      - POOL_TYPE_BASIC
      - POOL_TYPE_RANGED
    default: POOL_TYPE_UNSPECIFIED
    description: |-
      PoolType enumerates pool types.

       - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
       - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
       - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
  crescent.liquidity.v1beta1.QueryDepositRequestResponse:
    type: object
    properties:
      deposit_request:
        type: object
        properties:
          id:
            type: string
            format: uint64
            title: id specifies the id for the request
          pool_id:
            type: string
            format: uint64
            title: pool_id specifies the pool id
          msg_height:
            type: string
            format: int64
            title: >-
              msg_height specifies the block height when the request is stored
              for the batch execution
          depositor:
            type: string
            title: >-
              depositor specifies the bech32-encoded address that makes a
              deposit to the pool
          deposit_coins:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: deposit_coins specifies the amount of coins to deposit.
          accepted_coins:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: accepted_coins specifies the amount of coins that are accepted.
          minted_pool_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          status:
            type: string
            enum:
              - REQUEST_STATUS_UNSPECIFIED
              - REQUEST_STATUS_NOT_EXECUTED
              - REQUEST_STATUS_SUCCEEDED
              - REQUEST_STATUS_FAILED
            default: REQUEST_STATUS_UNSPECIFIED
            description: |-
              RequestStatus enumerates request statuses.

               - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
               - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
               - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
               - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
        description: DepositRequest defines a deposit request.
    description: >-
      QueryDepositRequestResponse is response type for the Query/DepositRequest
      RPC method.
  crescent.liquidity.v1beta1.QueryDepositRequestsResponse:
    type: object
    properties:
      deposit_requests:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              title: id specifies the id for the request
            pool_id:
              type: string
              format: uint64
              title: pool_id specifies the pool id
            msg_height:
              type: string
              format: int64
              title: >-
                msg_height specifies the block height when the request is stored
                for the batch execution
            depositor:
              type: string
              title: >-
                depositor specifies the bech32-encoded address that makes a
                deposit to the pool
            deposit_coins:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: deposit_coins specifies the amount of coins to deposit.
            accepted_coins:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: accepted_coins specifies the amount of coins that are accepted.
            minted_pool_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            status:
              type: string
              enum:
                - REQUEST_STATUS_UNSPECIFIED
                - REQUEST_STATUS_NOT_EXECUTED
                - REQUEST_STATUS_SUCCEEDED
                - REQUEST_STATUS_FAILED
              default: REQUEST_STATUS_UNSPECIFIED
              description: |-
                RequestStatus enumerates request statuses.

                 - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                 - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                 - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                 - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
          description: DepositRequest defines a deposit request.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryDepositRequestsResponse is response type for the
      Query/DepositRequests RPC method.
  crescent.liquidity.v1beta1.QueryNumMMOrdersResponse:
    type: object
    properties:
      num_market_making_orders:
        type: integer
        format: int64
  crescent.liquidity.v1beta1.QueryOrderBooksResponse:
    type: object
    properties:
      pairs:
        type: array
        items:
          type: object
          properties:
            pair_id:
              type: string
              format: uint64
            base_price:
              type: string
            order_books:
              type: array
              items:
                type: object
                properties:
                  price_unit:
                    type: string
                  sells:
                    type: array
                    items:
                      type: object
                      properties:
                        price:
                          type: string
                        user_order_amount:
                          type: string
                        pool_order_amount:
                          type: string
                  buys:
                    type: array
                    items:
                      type: object
                      properties:
                        price:
                          type: string
                        user_order_amount:
                          type: string
                        pool_order_amount:
                          type: string
    description: QueryOrderBooksResponse is response type for Query/OrderBooks RPC method.
  crescent.liquidity.v1beta1.QueryOrderResponse:
    type: object
    properties:
      order:
        type: object
        properties:
          type:
            title: type specifies the typo of the order
            type: string
            enum:
              - ORDER_TYPE_UNSPECIFIED
              - ORDER_TYPE_LIMIT
              - ORDER_TYPE_MARKET
              - ORDER_TYPE_MM
            default: ORDER_TYPE_UNSPECIFIED
            description: |-
              OrderType enumerates order types.

               - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
               - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
               - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
               - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
          id:
            type: string
            format: uint64
            title: id specifies the id of the order
          pair_id:
            type: string
            format: uint64
            title: pair_id specifies the pair id
          msg_height:
            type: string
            format: int64
            title: >-
              msg_height specifies the block height when the order is stored for
              the batch execution
          orderer:
            type: string
            title: orderer specifies the bech32-encoded address that makes an order
          direction:
            title: direction specifies the order direction; either buy or sell
            type: string
            enum:
              - ORDER_DIRECTION_UNSPECIFIED
              - ORDER_DIRECTION_BUY
              - ORDER_DIRECTION_SELL
            default: ORDER_DIRECTION_UNSPECIFIED
            description: |-
              OrderDirection enumerates order directions.

               - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
               - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
               - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
          offer_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          remaining_offer_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: remaining_offer_coin specifies the remaining offer coin
          received_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: received_coin specifies the received coin after the swap
          price:
            type: string
            title: price specifies the price that an orderer is willing to swap
          amount:
            type: string
          open_amount:
            type: string
          batch_id:
            type: string
            format: uint64
            title: batch_id specifies the pair's batch id when the request is stored
          expire_at:
            type: string
            format: date-time
          status:
            type: string
            enum:
              - ORDER_STATUS_UNSPECIFIED
              - ORDER_STATUS_NOT_EXECUTED
              - ORDER_STATUS_NOT_MATCHED
              - ORDER_STATUS_PARTIALLY_MATCHED
              - ORDER_STATUS_COMPLETED
              - ORDER_STATUS_CANCELED
              - ORDER_STATUS_EXPIRED
            default: ORDER_STATUS_UNSPECIFIED
            description: |-
              OrderStatus enumerates order statuses.

               - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
               - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
               - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
               - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
               - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
               - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
               - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
        description: Order defines an order.
    description: QueryOrderResponse is response type for the Query/Order RPC method.
  crescent.liquidity.v1beta1.QueryOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            type:
              title: type specifies the typo of the order
              type: string
              enum:
                - ORDER_TYPE_UNSPECIFIED
                - ORDER_TYPE_LIMIT
                - ORDER_TYPE_MARKET
                - ORDER_TYPE_MM
              default: ORDER_TYPE_UNSPECIFIED
              description: |-
                OrderType enumerates order types.

                 - ORDER_TYPE_UNSPECIFIED: ORDER_TYPE_UNSPECIFIED specifies unknown order type.
                 - ORDER_TYPE_LIMIT: ORDER_TYPE_LIMIT specifies limit order type.
                 - ORDER_TYPE_MARKET: ORDER_TYPE_MARKET specifies market order type.
                 - ORDER_TYPE_MM: ORDER_TYPE_MM specifies MM(market making) order type.
            id:
              type: string
              format: uint64
              title: id specifies the id of the order
            pair_id:
              type: string
              format: uint64
              title: pair_id specifies the pair id
            msg_height:
              type: string
              format: int64
              title: >-
                msg_height specifies the block height when the order is stored
                for the batch execution
            orderer:
              type: string
              title: orderer specifies the bech32-encoded address that makes an order
            direction:
              title: direction specifies the order direction; either buy or sell
              type: string
              enum:
                - ORDER_DIRECTION_UNSPECIFIED
                - ORDER_DIRECTION_BUY
                - ORDER_DIRECTION_SELL
              default: ORDER_DIRECTION_UNSPECIFIED
              description: |-
                OrderDirection enumerates order directions.

                 - ORDER_DIRECTION_UNSPECIFIED: ORDER_DIRECTION_UNSPECIFIED specifies unknown order direction
                 - ORDER_DIRECTION_BUY: ORDER_DIRECTION_BUY specifies buy(swap quote coin to base coin) order direction
                 - ORDER_DIRECTION_SELL: ORDER_DIRECTION_SELL specifies sell(swap base coin to quote coin) order direction
            offer_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            remaining_offer_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: remaining_offer_coin specifies the remaining offer coin
            received_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: received_coin specifies the received coin after the swap
            price:
              type: string
              title: price specifies the price that an orderer is willing to swap
            amount:
              type: string
            open_amount:
              type: string
            batch_id:
              type: string
              format: uint64
              title: >-
                batch_id specifies the pair's batch id when the request is
                stored
            expire_at:
              type: string
              format: date-time
            status:
              type: string
              enum:
                - ORDER_STATUS_UNSPECIFIED
                - ORDER_STATUS_NOT_EXECUTED
                - ORDER_STATUS_NOT_MATCHED
                - ORDER_STATUS_PARTIALLY_MATCHED
                - ORDER_STATUS_COMPLETED
                - ORDER_STATUS_CANCELED
                - ORDER_STATUS_EXPIRED
              default: ORDER_STATUS_UNSPECIFIED
              description: |-
                OrderStatus enumerates order statuses.

                 - ORDER_STATUS_UNSPECIFIED: ORDER_STATUS_UNSPECIFIED specifies unknown order status
                 - ORDER_STATUS_NOT_EXECUTED: ORDER_STATUS_NOT_EXECUTED indicates the order has not been executed yet
                 - ORDER_STATUS_NOT_MATCHED: ORDER_STATUS_NOT_MATCHED indicates the order has been executed but has no match
                 - ORDER_STATUS_PARTIALLY_MATCHED: ORDER_STATUS_PARTIALLY_MATCHED indicates the order has been partially matched
                 - ORDER_STATUS_COMPLETED: ORDER_STATUS_COMPLETED indicates the order has been fully matched and completed
                 - ORDER_STATUS_CANCELED: ORDER_STATUS_CANCELED indicates the order has been canceled
                 - ORDER_STATUS_EXPIRED: ORDER_STATUS_EXPIRED indicates the order has been expired
          description: Order defines an order.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryOrdersResponse is response type for the Query/Orders RPC method.
  crescent.liquidity.v1beta1.QueryPairResponse:
    type: object
    properties:
      pair:
        type: object
        properties:
          id:
            type: string
            format: uint64
          base_coin_denom:
            type: string
          quote_coin_denom:
            type: string
          escrow_address:
            type: string
          last_order_id:
            type: string
            format: uint64
          last_price:
            type: string
          current_batch_id:
            type: string
            format: uint64
        description: Pair defines a coin pair.
    description: QueryPairResponse is response type for the Query/Pair RPC method.
  crescent.liquidity.v1beta1.QueryPairsResponse:
    type: object
    properties:
      pairs:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            base_coin_denom:
              type: string
            quote_coin_denom:
              type: string
            escrow_address:
              type: string
            last_order_id:
              type: string
              format: uint64
            last_price:
              type: string
            current_batch_id:
              type: string
              format: uint64
          description: Pair defines a coin pair.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryPairsResponse is response type for the Query/Pairs RPC method.
  crescent.liquidity.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          batch_size:
            type: integer
            format: int64
          tick_precision:
            type: integer
            format: int64
          fee_collector_address:
            type: string
          dust_collector_address:
            type: string
          min_initial_pool_coin_supply:
            type: string
          pair_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          pool_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          min_initial_deposit_amount:
            type: string
          max_price_limit_ratio:
            type: string
          max_num_market_making_order_ticks:
            type: integer
            format: int64
          max_num_market_making_orders_per_pair:
            type: integer
            format: int64
          max_order_lifespan:
            type: string
          swap_fee_rate:
            type: string
          withdraw_fee_rate:
            type: string
          deposit_extra_gas:
            type: string
            format: uint64
          withdraw_extra_gas:
            type: string
            format: uint64
          order_extra_gas:
            type: string
            format: uint64
          max_num_active_pools_per_pair:
            type: integer
            format: int64
        description: Params defines the parameters for the liquidity module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  crescent.liquidity.v1beta1.QueryPoolResponse:
    type: object
    properties:
      pool:
        type: object
        properties:
          type:
            type: string
            enum:
              - POOL_TYPE_UNSPECIFIED
              - POOL_TYPE_BASIC
              - POOL_TYPE_RANGED
            default: POOL_TYPE_UNSPECIFIED
            description: |-
              PoolType enumerates pool types.

               - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
               - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
               - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
          id:
            type: string
            format: uint64
          pair_id:
            type: string
            format: uint64
          creator:
            type: string
          reserve_address:
            type: string
          pool_coin_denom:
            type: string
          pool_coin_supply:
            type: string
          min_price:
            type: string
          max_price:
            type: string
          price:
            type: string
          balances:
            type: object
            properties:
              base_coin:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              quote_coin:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
          last_deposit_request_id:
            type: string
            format: uint64
          last_withdraw_request_id:
            type: string
            format: uint64
          disabled:
            type: boolean
            format: boolean
        description: PoolResponse defines a custom pool response message.
    description: QueryPoolResponse is response type for the Query/Pool RPC method.
  crescent.liquidity.v1beta1.QueryPoolsResponse:
    type: object
    properties:
      pools:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - POOL_TYPE_UNSPECIFIED
                - POOL_TYPE_BASIC
                - POOL_TYPE_RANGED
              default: POOL_TYPE_UNSPECIFIED
              description: |-
                PoolType enumerates pool types.

                 - POOL_TYPE_UNSPECIFIED: POOL_TYPE_UNSPECIFIED specifies unknown pool type
                 - POOL_TYPE_BASIC: POOL_TYPE_BASIC specifies the basic pool type
                 - POOL_TYPE_RANGED: POOL_TYPE_RANGED specifies the ranged pool type
            id:
              type: string
              format: uint64
            pair_id:
              type: string
              format: uint64
            creator:
              type: string
            reserve_address:
              type: string
            pool_coin_denom:
              type: string
            pool_coin_supply:
              type: string
            min_price:
              type: string
            max_price:
              type: string
            price:
              type: string
            balances:
              type: object
              properties:
                base_coin:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                quote_coin:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
            last_deposit_request_id:
              type: string
              format: uint64
            last_withdraw_request_id:
              type: string
              format: uint64
            disabled:
              type: boolean
              format: boolean
          description: PoolResponse defines a custom pool response message.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryPoolsResponse is response type for the Query/Pools RPC method.
  crescent.liquidity.v1beta1.QueryWithdrawRequestResponse:
    type: object
    properties:
      withdraw_request:
        type: object
        properties:
          id:
            type: string
            format: uint64
            title: id specifies the id for the request
          pool_id:
            type: string
            format: uint64
            title: pool_id specifies the pool id
          msg_height:
            type: string
            format: int64
            title: >-
              msg_height specifies the block height when the request is stored
              for the batch execution
          withdrawer:
            type: string
            title: >-
              withdrawer specifies the bech32-encoded address that withdraws
              pool coin from the pool
          pool_coin:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: >-
              pool_coin specifies the pool coin that is a proof of liquidity
              provider for the pool
          withdrawn_coins:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            description: withdrawn_coins specifies the amount of coins that are withdrawn.
          status:
            type: string
            enum:
              - REQUEST_STATUS_UNSPECIFIED
              - REQUEST_STATUS_NOT_EXECUTED
              - REQUEST_STATUS_SUCCEEDED
              - REQUEST_STATUS_FAILED
            default: REQUEST_STATUS_UNSPECIFIED
            description: |-
              RequestStatus enumerates request statuses.

               - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
               - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
               - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
               - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
        description: WithdrawRequest defines a withdraw request.
    description: >-
      QueryWithdrawRequestResponse is response type for the
      Query/WithdrawRequest RPC method.
  crescent.liquidity.v1beta1.QueryWithdrawRequestsResponse:
    type: object
    properties:
      withdraw_requests:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              title: id specifies the id for the request
            pool_id:
              type: string
              format: uint64
              title: pool_id specifies the pool id
            msg_height:
              type: string
              format: int64
              title: >-
                msg_height specifies the block height when the request is stored
                for the batch execution
            withdrawer:
              type: string
              title: >-
                withdrawer specifies the bech32-encoded address that withdraws
                pool coin from the pool
            pool_coin:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: >-
                pool_coin specifies the pool coin that is a proof of liquidity
                provider for the pool
            withdrawn_coins:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              description: >-
                withdrawn_coins specifies the amount of coins that are
                withdrawn.
            status:
              type: string
              enum:
                - REQUEST_STATUS_UNSPECIFIED
                - REQUEST_STATUS_NOT_EXECUTED
                - REQUEST_STATUS_SUCCEEDED
                - REQUEST_STATUS_FAILED
              default: REQUEST_STATUS_UNSPECIFIED
              description: |-
                RequestStatus enumerates request statuses.

                 - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
                 - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
                 - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
                 - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
          description: WithdrawRequest defines a withdraw request.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryWithdrawRequestsResponse is response type for the
      Query/WithdrawRequests RPC method.
  crescent.liquidity.v1beta1.RequestStatus:
    type: string
    enum:
      - REQUEST_STATUS_UNSPECIFIED
      - REQUEST_STATUS_NOT_EXECUTED
      - REQUEST_STATUS_SUCCEEDED
      - REQUEST_STATUS_FAILED
    default: REQUEST_STATUS_UNSPECIFIED
    description: |-
      RequestStatus enumerates request statuses.

       - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
       - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
       - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
       - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
  crescent.liquidity.v1beta1.WithdrawRequest:
    type: object
    properties:
      id:
        type: string
        format: uint64
        title: id specifies the id for the request
      pool_id:
        type: string
        format: uint64
        title: pool_id specifies the pool id
      msg_height:
        type: string
        format: int64
        title: >-
          msg_height specifies the block height when the request is stored for
          the batch execution
      withdrawer:
        type: string
        title: >-
          withdrawer specifies the bech32-encoded address that withdraws pool
          coin from the pool
      pool_coin:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: >-
          pool_coin specifies the pool coin that is a proof of liquidity
          provider for the pool
      withdrawn_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        description: withdrawn_coins specifies the amount of coins that are withdrawn.
      status:
        type: string
        enum:
          - REQUEST_STATUS_UNSPECIFIED
          - REQUEST_STATUS_NOT_EXECUTED
          - REQUEST_STATUS_SUCCEEDED
          - REQUEST_STATUS_FAILED
        default: REQUEST_STATUS_UNSPECIFIED
        description: |-
          RequestStatus enumerates request statuses.

           - REQUEST_STATUS_UNSPECIFIED: REQUEST_STATUS_UNSPECIFIED specifies unknown request status
           - REQUEST_STATUS_NOT_EXECUTED: REQUEST_STATUS_NOT_EXECUTED indicates the request is not executed yet
           - REQUEST_STATUS_SUCCEEDED: REQUEST_STATUS_SUCCEEDED indicates the request has been succeeded
           - REQUEST_STATUS_FAILED: REQUEST_STATUS_FAILED indicates the request is failed
    description: WithdrawRequest defines a withdraw request.
  cosmos.budget.v1beta1.AddressType:
    type: string
    enum:
      - ADDRESS_TYPE_32_BYTES
      - ADDRESS_TYPE_20_BYTES
    default: ADDRESS_TYPE_32_BYTES
    description: |-
      AddressType enumerates the available types of a address.

       - ADDRESS_TYPE_32_BYTES: the 32 bytes length address type of ADR 028.
       - ADDRESS_TYPE_20_BYTES: the default 20 bytes length address type.
  cosmos.budget.v1beta1.Budget:
    type: object
    properties:
      name:
        type: string
        title: name defines the name of the budget
      rate:
        type: string
        title: rate specifies the distributing amount by ratio of total budget source
      source_address:
        type: string
        title: >-
          source_address defines the bech32-encoded address that source of the
          budget
      destination_address:
        type: string
        title: >-
          destination_address defines the bech32-encoded address of the budget
          pool to distribute
      start_time:
        type: string
        format: date-time
        title: start_time specifies the start time of the budget
      end_time:
        type: string
        format: date-time
        title: end_time specifies the end time of the budget
    description: Budget defines a budget object.
  cosmos.budget.v1beta1.BudgetResponse:
    type: object
    properties:
      budget:
        type: object
        properties:
          name:
            type: string
            title: name defines the name of the budget
          rate:
            type: string
            title: >-
              rate specifies the distributing amount by ratio of total budget
              source
          source_address:
            type: string
            title: >-
              source_address defines the bech32-encoded address that source of
              the budget
          destination_address:
            type: string
            title: >-
              destination_address defines the bech32-encoded address of the
              budget pool to distribute
          start_time:
            type: string
            format: date-time
            title: start_time specifies the start time of the budget
          end_time:
            type: string
            format: date-time
            title: end_time specifies the end time of the budget
        description: Budget defines a budget object.
      total_collected_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  cosmos.budget.v1beta1.Params:
    type: object
    properties:
      epoch_blocks:
        type: integer
        format: int64
        title: |-
          The universal epoch length in number of blocks
          A collection of budgets is executed with this epoch_blocks parameter
      budgets:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              title: name defines the name of the budget
            rate:
              type: string
              title: >-
                rate specifies the distributing amount by ratio of total budget
                source
            source_address:
              type: string
              title: >-
                source_address defines the bech32-encoded address that source of
                the budget
            destination_address:
              type: string
              title: >-
                destination_address defines the bech32-encoded address of the
                budget pool to distribute
            start_time:
              type: string
              format: date-time
              title: start_time specifies the start time of the budget
            end_time:
              type: string
              format: date-time
              title: end_time specifies the end time of the budget
          description: Budget defines a budget object.
        title: |-
          Budgets parameter can be added, modified, and deleted through
          parameter change governance proposal
    description: Params defines the parameters for the budget module.
  cosmos.budget.v1beta1.QueryAddressesResponse:
    type: object
    properties:
      address:
        type: string
    description: >-
      QueryAddressesResponse is the response type for the Query/Addresses RPC
      method.
  cosmos.budget.v1beta1.QueryBudgetsResponse:
    type: object
    properties:
      budgets:
        type: array
        items:
          type: object
          properties:
            budget:
              type: object
              properties:
                name:
                  type: string
                  title: name defines the name of the budget
                rate:
                  type: string
                  title: >-
                    rate specifies the distributing amount by ratio of total
                    budget source
                source_address:
                  type: string
                  title: >-
                    source_address defines the bech32-encoded address that
                    source of the budget
                destination_address:
                  type: string
                  title: >-
                    destination_address defines the bech32-encoded address of
                    the budget pool to distribute
                start_time:
                  type: string
                  format: date-time
                  title: start_time specifies the start time of the budget
                end_time:
                  type: string
                  format: date-time
                  title: end_time specifies the end time of the budget
              description: Budget defines a budget object.
            total_collected_coins:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
    description: >-
      QueryBudgetsResponse is the response type for the Query/Budgets RPC
      method.
  cosmos.budget.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          epoch_blocks:
            type: integer
            format: int64
            title: >-
              The universal epoch length in number of blocks

              A collection of budgets is executed with this epoch_blocks
              parameter
          budgets:
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  title: name defines the name of the budget
                rate:
                  type: string
                  title: >-
                    rate specifies the distributing amount by ratio of total
                    budget source
                source_address:
                  type: string
                  title: >-
                    source_address defines the bech32-encoded address that
                    source of the budget
                destination_address:
                  type: string
                  title: >-
                    destination_address defines the bech32-encoded address of
                    the budget pool to distribute
                start_time:
                  type: string
                  format: date-time
                  title: start_time specifies the start time of the budget
                end_time:
                  type: string
                  format: date-time
                  title: end_time specifies the end time of the budget
              description: Budget defines a budget object.
            title: |-
              Budgets parameter can be added, modified, and deleted through
              parameter change governance proposal
        description: Params defines the parameters for the budget module.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  crescent.liquidstaking.v1beta1.LiquidValidatorState:
    type: object
    properties:
      operator_address:
        type: string
        description: >-
          operator_address defines the address of the validator's operator; bech
          encoded in JSON.
      weight:
        type: string
        title: 'weight specifies the weight for liquid staking, unstaking amount'
      status:
        title: status is the liquid validator status
        type: string
        enum:
          - VALIDATOR_STATUS_UNSPECIFIED
          - VALIDATOR_STATUS_ACTIVE
          - VALIDATOR_STATUS_INACTIVE
        default: VALIDATOR_STATUS_UNSPECIFIED
        description: |-
          ValidatorStatus enumerates the status of a liquid validator.

           - VALIDATOR_STATUS_UNSPECIFIED: VALIDATOR_STATUS_UNSPECIFIED defines the unspecified invalid status.
           - VALIDATOR_STATUS_ACTIVE: VALIDATOR_STATUS_ACTIVE defines the active, valid status
           - VALIDATOR_STATUS_INACTIVE: VALIDATOR_STATUS_INACTIVE defines the inactive, invalid status
      del_shares:
        type: string
        title: del_shares define the delegation shares of the validator
      liquid_tokens:
        type: string
        title: >-
          liquid_tokens define the token amount worth of delegation shares of
          the validator (slashing applied amount)
    description: >-
      LiquidValidatorState is type LiquidValidator with state added to return to
      query results.
  crescent.liquidstaking.v1beta1.NetAmountState:
    type: object
    properties:
      mint_rate:
        type: string
        title: mint_rate is bTokenTotalSupply / NetAmount
      btoken_total_supply:
        type: string
        title: >-
          btoken_total_supply returns the total supply of
          btoken(liquid_bond_denom)
      net_amount:
        type: string
        title: >-
          net_amount is proxy account's native token balance + total liquid
          tokens + total remaining rewards + total

          unbonding balance
      total_del_shares:
        type: string
        title: total_del_shares define the delegation shares of all liquid validators
      total_liquid_tokens:
        type: string
        title: >-
          total_liquid_tokens define the token amount worth of delegation shares
          of all liquid validator (slashing applied

          amount)
      total_remaining_rewards:
        type: string
        title: >-
          total_remaining_rewards define the sum of remaining rewards of proxy
          account by all liquid validators
      total_unbonding_balance:
        type: string
        title: >-
          total_unbonding_balance define the unbonding balance of proxy account
          by all liquid validator (slashing applied

          amount)
      proxy_acc_balance:
        type: string
        title: >-
          proxy_acc_balance define the balance of proxy account for the native
          token
    description: >-
      NetAmountState is type for net amount raw data and mint rate, This is a
      value that depends on the several module

      state every time, so it is used only for calculation and query and is not
      stored in kv.
  crescent.liquidstaking.v1beta1.Params:
    type: object
    properties:
      liquid_bond_denom:
        type: string
        description: >-
          LiquidBondDenom specifies the denomination of the token receiving
          after LiquidStaking, The value is calculated

          through NetAmount.
      whitelisted_validators:
        type: array
        items:
          type: object
          properties:
            validator_address:
              type: string
              title: >-
                validator_address defines the bech32-encoded address that
                whitelisted validator
            target_weight:
              type: string
              title: >-
                target_weight specifies the target weight for liquid staking,
                unstaking amount, which is a value for calculating

                the real weight to be derived according to the active status
          description: >-
            WhitelistedValidator consists of the validator operator address and
            the target weight, which is a value for

            calculating the real weight to be derived according to the active
            status. In the case of inactive, it is calculated

            as zero.
        description: >-
          WhitelistedValidators specifies the validators elected to become
          Active Liquid Validators.
      unstake_fee_rate:
        type: string
        title: >-
          UnstakeFeeRate specifies the fee rate when liquid unstake is
          requested, unbonded by subtracting it from

          unbondingAmount
      min_liquid_staking_amount:
        type: string
        description: >-
          MinLiquidStakingAmount specifies the minimum number of coins to be
          staked to the active liquid validators on liquid

          staking to minimize decimal loss and consider gas efficiency.
    description: Params defines the set of params for the liquidstaking module.
  crescent.liquidstaking.v1beta1.QueryLiquidValidatorsResponse:
    type: object
    properties:
      liquid_validators:
        type: array
        items:
          type: object
          properties:
            operator_address:
              type: string
              description: >-
                operator_address defines the address of the validator's
                operator; bech encoded in JSON.
            weight:
              type: string
              title: 'weight specifies the weight for liquid staking, unstaking amount'
            status:
              title: status is the liquid validator status
              type: string
              enum:
                - VALIDATOR_STATUS_UNSPECIFIED
                - VALIDATOR_STATUS_ACTIVE
                - VALIDATOR_STATUS_INACTIVE
              default: VALIDATOR_STATUS_UNSPECIFIED
              description: |-
                ValidatorStatus enumerates the status of a liquid validator.

                 - VALIDATOR_STATUS_UNSPECIFIED: VALIDATOR_STATUS_UNSPECIFIED defines the unspecified invalid status.
                 - VALIDATOR_STATUS_ACTIVE: VALIDATOR_STATUS_ACTIVE defines the active, valid status
                 - VALIDATOR_STATUS_INACTIVE: VALIDATOR_STATUS_INACTIVE defines the inactive, invalid status
            del_shares:
              type: string
              title: del_shares define the delegation shares of the validator
            liquid_tokens:
              type: string
              title: >-
                liquid_tokens define the token amount worth of delegation shares
                of the validator (slashing applied amount)
          description: >-
            LiquidValidatorState is type LiquidValidator with state added to
            return to query results.
    description: >-
      QueryLiquidValidatorsResponse is the response type for the
      Query/LiquidValidators RPC method.
  crescent.liquidstaking.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          liquid_bond_denom:
            type: string
            description: >-
              LiquidBondDenom specifies the denomination of the token receiving
              after LiquidStaking, The value is calculated

              through NetAmount.
          whitelisted_validators:
            type: array
            items:
              type: object
              properties:
                validator_address:
                  type: string
                  title: >-
                    validator_address defines the bech32-encoded address that
                    whitelisted validator
                target_weight:
                  type: string
                  title: >-
                    target_weight specifies the target weight for liquid
                    staking, unstaking amount, which is a value for calculating

                    the real weight to be derived according to the active status
              description: >-
                WhitelistedValidator consists of the validator operator address
                and the target weight, which is a value for

                calculating the real weight to be derived according to the
                active status. In the case of inactive, it is calculated

                as zero.
            description: >-
              WhitelistedValidators specifies the validators elected to become
              Active Liquid Validators.
          unstake_fee_rate:
            type: string
            title: >-
              UnstakeFeeRate specifies the fee rate when liquid unstake is
              requested, unbonded by subtracting it from

              unbondingAmount
          min_liquid_staking_amount:
            type: string
            description: >-
              MinLiquidStakingAmount specifies the minimum number of coins to be
              staked to the active liquid validators on liquid

              staking to minimize decimal loss and consider gas efficiency.
        description: Params defines the set of params for the liquidstaking module.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  crescent.liquidstaking.v1beta1.QueryStatesResponse:
    type: object
    properties:
      net_amount_state:
        type: object
        properties:
          mint_rate:
            type: string
            title: mint_rate is bTokenTotalSupply / NetAmount
          btoken_total_supply:
            type: string
            title: >-
              btoken_total_supply returns the total supply of
              btoken(liquid_bond_denom)
          net_amount:
            type: string
            title: >-
              net_amount is proxy account's native token balance + total liquid
              tokens + total remaining rewards + total

              unbonding balance
          total_del_shares:
            type: string
            title: >-
              total_del_shares define the delegation shares of all liquid
              validators
          total_liquid_tokens:
            type: string
            title: >-
              total_liquid_tokens define the token amount worth of delegation
              shares of all liquid validator (slashing applied

              amount)
          total_remaining_rewards:
            type: string
            title: >-
              total_remaining_rewards define the sum of remaining rewards of
              proxy account by all liquid validators
          total_unbonding_balance:
            type: string
            title: >-
              total_unbonding_balance define the unbonding balance of proxy
              account by all liquid validator (slashing applied

              amount)
          proxy_acc_balance:
            type: string
            title: >-
              proxy_acc_balance define the balance of proxy account for the
              native token
        description: >-
          NetAmountState is type for net amount raw data and mint rate, This is
          a value that depends on the several module

          state every time, so it is used only for calculation and query and is
          not stored in kv.
    description: QueryStatesResponse is the response type for the Query/States RPC method.
  crescent.liquidstaking.v1beta1.QueryVotingPowerResponse:
    type: object
    properties:
      voting_power:
        type: object
        properties:
          voter:
            type: string
            description: voter defines the address of the voter; bech encoded in JSON.
          staking_voting_power:
            type: string
            description: >-
              staking_voting_power return the voting power of staking that can
              be exercised.
          liquid_staking_voting_power:
            type: string
            description: >-
              liquid_staking_voting_power return the voting power of liquid
              staking that can be exercised.
          validator_voting_power:
            type: string
            description: >-
              validator_voting_power return the voting power of the validator if
              the voter is the validator operator that can be

              exercised.
        description: >-
          VotingPower is type for current voting power of the voter including
          staking module's voting power and liquid staking

          module's voting power, It depends on the amount of delegation of
          staking module, the bonded state of the delegated

          validator, the value of btoken(liquid_bond_denom), and the pool coin
          and farming position containing btoken..
    description: >-
      QueryVotingPowerResponse is the response type for the Query/States RPC
      method.
  crescent.liquidstaking.v1beta1.ValidatorStatus:
    type: string
    enum:
      - VALIDATOR_STATUS_UNSPECIFIED
      - VALIDATOR_STATUS_ACTIVE
      - VALIDATOR_STATUS_INACTIVE
    default: VALIDATOR_STATUS_UNSPECIFIED
    description: |-
      ValidatorStatus enumerates the status of a liquid validator.

       - VALIDATOR_STATUS_UNSPECIFIED: VALIDATOR_STATUS_UNSPECIFIED defines the unspecified invalid status.
       - VALIDATOR_STATUS_ACTIVE: VALIDATOR_STATUS_ACTIVE defines the active, valid status
       - VALIDATOR_STATUS_INACTIVE: VALIDATOR_STATUS_INACTIVE defines the inactive, invalid status
  crescent.liquidstaking.v1beta1.VotingPower:
    type: object
    properties:
      voter:
        type: string
        description: voter defines the address of the voter; bech encoded in JSON.
      staking_voting_power:
        type: string
        description: >-
          staking_voting_power return the voting power of staking that can be
          exercised.
      liquid_staking_voting_power:
        type: string
        description: >-
          liquid_staking_voting_power return the voting power of liquid staking
          that can be exercised.
      validator_voting_power:
        type: string
        description: >-
          validator_voting_power return the voting power of the validator if the
          voter is the validator operator that can be

          exercised.
    description: >-
      VotingPower is type for current voting power of the voter including
      staking module's voting power and liquid staking

      module's voting power, It depends on the amount of delegation of staking
      module, the bonded state of the delegated

      validator, the value of btoken(liquid_bond_denom), and the pool coin and
      farming position containing btoken..
  crescent.liquidstaking.v1beta1.WhitelistedValidator:
    type: object
    properties:
      validator_address:
        type: string
        title: >-
          validator_address defines the bech32-encoded address that whitelisted
          validator
      target_weight:
        type: string
        title: >-
          target_weight specifies the target weight for liquid staking,
          unstaking amount, which is a value for calculating

          the real weight to be derived according to the active status
    description: >-
      WhitelistedValidator consists of the validator operator address and the
      target weight, which is a value for

      calculating the real weight to be derived according to the active status.
      In the case of inactive, it is calculated

      as zero.
  crescent.mint.v1beta1.InflationSchedule:
    type: object
    properties:
      start_time:
        type: string
        format: date-time
        title: start_time defines the start date time for the inflation schedule
      end_time:
        type: string
        format: date-time
        title: end_time defines the end date time for the inflation schedule
      amount:
        type: string
        title: amount defines the total amount of inflation for the schedule
    description: >-
      InflationSchedule defines the start and end time of the inflation period,
      and the amount of inflation during that

      period.
  crescent.mint.v1beta1.Params:
    type: object
    properties:
      mint_denom:
        type: string
        title: mint_denom defines denomination of coin to be minted
      mint_pool_address:
        type: string
        description: >-
          mint_pool_address defines the address where inflation will be minted.
          The default is FeeCollector,

          but if it is set to FeeCollector, minted inflation could be mixed
          together with collected tx fees.

          Therefore, it is recommended to specify a separate address depending
          on usage.
      block_time_threshold:
        type: string
        title: >-
          block_time_threshold defines block time threshold to prevent from any
          inflationary manipulation attacks

          it is used for maximum block duration when calculating block inflation
      inflation_schedules:
        type: array
        items:
          type: object
          properties:
            start_time:
              type: string
              format: date-time
              title: >-
                start_time defines the start date time for the inflation
                schedule
            end_time:
              type: string
              format: date-time
              title: end_time defines the end date time for the inflation schedule
            amount:
              type: string
              title: amount defines the total amount of inflation for the schedule
          description: >-
            InflationSchedule defines the start and end time of the inflation
            period, and the amount of inflation during that

            period.
        title: inflation_schedules defines a list of inflation schedules
    description: Params holds parameters for the mint module.
  crescent.mint.v1beta1.QueryLastBlockTimeResponse:
    type: object
    properties:
      last_block_time:
        type: string
        format: date-time
    description: >-
      QueryLastBlockTimeResponse is the response type for the
      Query/LastBlockTime RPC method.
  crescent.mint.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        description: params defines the parameters of the module.
        type: object
        properties:
          mint_denom:
            type: string
            title: mint_denom defines denomination of coin to be minted
          mint_pool_address:
            type: string
            description: >-
              mint_pool_address defines the address where inflation will be
              minted. The default is FeeCollector,

              but if it is set to FeeCollector, minted inflation could be mixed
              together with collected tx fees.

              Therefore, it is recommended to specify a separate address
              depending on usage.
          block_time_threshold:
            type: string
            title: >-
              block_time_threshold defines block time threshold to prevent from
              any inflationary manipulation attacks

              it is used for maximum block duration when calculating block
              inflation
          inflation_schedules:
            type: array
            items:
              type: object
              properties:
                start_time:
                  type: string
                  format: date-time
                  title: >-
                    start_time defines the start date time for the inflation
                    schedule
                end_time:
                  type: string
                  format: date-time
                  title: >-
                    end_time defines the end date time for the inflation
                    schedule
                amount:
                  type: string
                  title: >-
                    amount defines the total amount of inflation for the
                    schedule
              description: >-
                InflationSchedule defines the start and end time of the
                inflation period, and the amount of inflation during that

                period.
            title: inflation_schedules defines a list of inflation schedules
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  crescent.claim.v1beta1.Airdrop:
    type: object
    properties:
      id:
        type: string
        format: uint64
        title: id specifies index of the airdrop
      source_address:
        type: string
        title: |-
          source_address defines the bech32-encoded source address
          where the source of coins from
      conditions:
        type: array
        items:
          type: string
          enum:
            - CONDITION_TYPE_UNSPECIFIED
            - CONDITION_TYPE_DEPOSIT
            - CONDITION_TYPE_SWAP
            - CONDITION_TYPE_LIQUIDSTAKE
            - CONDITION_TYPE_VOTE
          default: CONDITION_TYPE_UNSPECIFIED
          description: >-
            ConditionType defines the type of condition that a recipient must
            execute in order to receive a claimable amount.

             - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
             - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
             - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
             - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
             - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
        title: conditions specifies a list of conditions
      start_time:
        type: string
        format: date-time
        title: start_time specifies the start time of the airdrop
      end_time:
        type: string
        format: date-time
        title: end_time specifies the start time of the airdrop
    description: Airdrop defines airdrop information.
  crescent.claim.v1beta1.ClaimRecord:
    type: object
    properties:
      airdrop_id:
        type: string
        format: uint64
        title: airdrop_id specifies airdrop id
      recipient:
        type: string
        title: >-
          recipient specifies the bech32-encoded address that is eligible to
          claim airdrop
      initial_claimable_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: initial_claimable_coins specifies the initial claimable coins
      claimable_coins:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: claimable_coins specifies the unclaimed claimable coins
      claimed_conditions:
        type: array
        items:
          type: string
          enum:
            - CONDITION_TYPE_UNSPECIFIED
            - CONDITION_TYPE_DEPOSIT
            - CONDITION_TYPE_SWAP
            - CONDITION_TYPE_LIQUIDSTAKE
            - CONDITION_TYPE_VOTE
          default: CONDITION_TYPE_UNSPECIFIED
          description: >-
            ConditionType defines the type of condition that a recipient must
            execute in order to receive a claimable amount.

             - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
             - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
             - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
             - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
             - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
        title: >-
          claimed_conditions specifies a list of condition types

          initial values are empty and each condition type gets appended when
          claim is successfully executed
    description: ClaimRecord defines claim record that corresponds to the airdrop.
  crescent.claim.v1beta1.ConditionType:
    type: string
    enum:
      - CONDITION_TYPE_UNSPECIFIED
      - CONDITION_TYPE_DEPOSIT
      - CONDITION_TYPE_SWAP
      - CONDITION_TYPE_LIQUIDSTAKE
      - CONDITION_TYPE_VOTE
    default: CONDITION_TYPE_UNSPECIFIED
    description: >-
      ConditionType defines the type of condition that a recipient must execute
      in order to receive a claimable amount.

       - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
       - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
       - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
       - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
       - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
  crescent.claim.v1beta1.QueryAirdropResponse:
    type: object
    properties:
      airdrop:
        type: object
        properties:
          id:
            type: string
            format: uint64
            title: id specifies index of the airdrop
          source_address:
            type: string
            title: |-
              source_address defines the bech32-encoded source address
              where the source of coins from
          conditions:
            type: array
            items:
              type: string
              enum:
                - CONDITION_TYPE_UNSPECIFIED
                - CONDITION_TYPE_DEPOSIT
                - CONDITION_TYPE_SWAP
                - CONDITION_TYPE_LIQUIDSTAKE
                - CONDITION_TYPE_VOTE
              default: CONDITION_TYPE_UNSPECIFIED
              description: >-
                ConditionType defines the type of condition that a recipient
                must execute in order to receive a claimable amount.

                 - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                 - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                 - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                 - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                 - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
            title: conditions specifies a list of conditions
          start_time:
            type: string
            format: date-time
            title: start_time specifies the start time of the airdrop
          end_time:
            type: string
            format: date-time
            title: end_time specifies the start time of the airdrop
        description: Airdrop defines airdrop information.
    description: QueryAirdropResponse is response type for the Query/Airdrop RPC method.
  crescent.claim.v1beta1.QueryAirdropsResponse:
    type: object
    properties:
      airdrops:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              title: id specifies index of the airdrop
            source_address:
              type: string
              title: |-
                source_address defines the bech32-encoded source address
                where the source of coins from
            conditions:
              type: array
              items:
                type: string
                enum:
                  - CONDITION_TYPE_UNSPECIFIED
                  - CONDITION_TYPE_DEPOSIT
                  - CONDITION_TYPE_SWAP
                  - CONDITION_TYPE_LIQUIDSTAKE
                  - CONDITION_TYPE_VOTE
                default: CONDITION_TYPE_UNSPECIFIED
                description: >-
                  ConditionType defines the type of condition that a recipient
                  must execute in order to receive a claimable amount.

                   - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                   - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                   - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                   - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                   - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
              title: conditions specifies a list of conditions
            start_time:
              type: string
              format: date-time
              title: start_time specifies the start time of the airdrop
            end_time:
              type: string
              format: date-time
              title: end_time specifies the start time of the airdrop
          description: Airdrop defines airdrop information.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryAirdropsResponse is response type for the Query/Airdrops RPC method.
  crescent.claim.v1beta1.QueryClaimRecordResponse:
    type: object
    properties:
      claim_record:
        type: object
        properties:
          airdrop_id:
            type: string
            format: uint64
            title: airdrop_id specifies airdrop id
          recipient:
            type: string
            title: >-
              recipient specifies the bech32-encoded address that is eligible to
              claim airdrop
          initial_claimable_coins:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: initial_claimable_coins specifies the initial claimable coins
          claimable_coins:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: claimable_coins specifies the unclaimed claimable coins
          claimed_conditions:
            type: array
            items:
              type: string
              enum:
                - CONDITION_TYPE_UNSPECIFIED
                - CONDITION_TYPE_DEPOSIT
                - CONDITION_TYPE_SWAP
                - CONDITION_TYPE_LIQUIDSTAKE
                - CONDITION_TYPE_VOTE
              default: CONDITION_TYPE_UNSPECIFIED
              description: >-
                ConditionType defines the type of condition that a recipient
                must execute in order to receive a claimable amount.

                 - CONDITION_TYPE_UNSPECIFIED: CONDITION_TYPE_UNSPECIFIED specifies an unknown condition type
                 - CONDITION_TYPE_DEPOSIT: CONDITION_TYPE_DEPOSIT specifies deposit condition type
                 - CONDITION_TYPE_SWAP: CONDITION_TYPE_SWAP specifies swap condition type
                 - CONDITION_TYPE_LIQUIDSTAKE: CONDITION_TYPE_LIQUIDSTAKE specifies liquid stake condition type
                 - CONDITION_TYPE_VOTE: CONDITION_TYPE_VOTE specifies governance vote condition type
            title: >-
              claimed_conditions specifies a list of condition types

              initial values are empty and each condition type gets appended
              when claim is successfully executed
        description: ClaimRecord defines claim record that corresponds to the airdrop.
    description: >-
      QueryClaimRecordResponse is response type for the Query/ClaimRecord RPC
      method.
  crescent.marketmaker.v1beta1.Common:
    type: object
    properties:
      min_open_ratio:
        type: string
        title: Minimum ratio to maintain the tick order
      min_open_depth_ratio:
        type: string
        title: Minimum ratio of open amount to MinDepth
      max_downtime:
        type: integer
        format: int64
        title: Maximum allowable consecutive blocks of outage
      max_total_downtime:
        type: integer
        format: int64
        title: Maximum allowable sum of blocks in an hour
      min_hours:
        type: integer
        format: int64
        title: Minimum value of LiveHour to achieve LiveDay
      min_days:
        type: integer
        format: int64
        title: Minimum value of LiveDay to maintain MM eligibility
  crescent.marketmaker.v1beta1.Incentive:
    type: object
    properties:
      address:
        type: string
      claimable:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    title: >-
      Store the total amount of incentives distributed through
      `MarketMakerProposal`, and it can be claimed at once through

      `MsgClaimIncentives`
  crescent.marketmaker.v1beta1.IncentivePair:
    type: object
    properties:
      pair_id:
        type: string
        format: uint64
        title: Pair id of liquidity module
      update_time:
        type: string
        format: date-time
        title: Time the pair variables start to be applied to the scoring system
      incentive_weight:
        type: string
        title: Incentive weights for each pair
      max_spread:
        type: string
        title: Maximum allowable spread between bid and ask
      min_width:
        type: string
        title: >-
          Minimum allowable price difference of high and low on both side of
          orders
      min_depth:
        type: string
        title: Minimum allowable order depth on each side
  crescent.marketmaker.v1beta1.MarketMaker:
    type: object
    properties:
      address:
        type: string
      pair_id:
        type: string
        format: uint64
      eligible:
        type: boolean
        format: boolean
    title: >-
      Market maker object created by applying, if included through
      `MarketMakerProposal`, eligible becomes true and is

      deleted if rejected or excluded
  crescent.marketmaker.v1beta1.Params:
    type: object
    properties:
      incentive_budget_address:
        type: string
        title: Address containing the funds used to distribute incentives
      deposit_amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: >-
          The amount of deposit to be applied to the market maker, which is
          calculated per pair and is refunded when the

          market maker included or rejected through the MarketMaker Proposal
      common:
        title: Common variables used in market maker scoring system
        type: object
        properties:
          min_open_ratio:
            type: string
            title: Minimum ratio to maintain the tick order
          min_open_depth_ratio:
            type: string
            title: Minimum ratio of open amount to MinDepth
          max_downtime:
            type: integer
            format: int64
            title: Maximum allowable consecutive blocks of outage
          max_total_downtime:
            type: integer
            format: int64
            title: Maximum allowable sum of blocks in an hour
          min_hours:
            type: integer
            format: int64
            title: Minimum value of LiveHour to achieve LiveDay
          min_days:
            type: integer
            format: int64
            title: Minimum value of LiveDay to maintain MM eligibility
      incentive_pairs:
        type: array
        items:
          type: object
          properties:
            pair_id:
              type: string
              format: uint64
              title: Pair id of liquidity module
            update_time:
              type: string
              format: date-time
              title: >-
                Time the pair variables start to be applied to the scoring
                system
            incentive_weight:
              type: string
              title: Incentive weights for each pair
            max_spread:
              type: string
              title: Maximum allowable spread between bid and ask
            min_width:
              type: string
              title: >-
                Minimum allowable price difference of high and low on both side
                of orders
            min_depth:
              type: string
              title: Minimum allowable order depth on each side
        title: >-
          Include the pairs that are incentive target pairs and the variables
          used in market maker scoring system
    description: Params defines the set of params for the marketmaker module.
  crescent.marketmaker.v1beta1.QueryIncentiveResponse:
    type: object
    properties:
      incentive:
        type: object
        properties:
          address:
            type: string
          claimable:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
        title: >-
          Store the total amount of incentives distributed through
          `MarketMakerProposal`, and it can be claimed at once through

          `MsgClaimIncentives`
    description: >-
      QueryIncentiveResponse is the response type for the Query/Incentive RPC
      method.
  crescent.marketmaker.v1beta1.QueryMarketMakersResponse:
    type: object
    properties:
      marketmakers:
        type: array
        items:
          type: object
          properties:
            address:
              type: string
            pair_id:
              type: string
              format: uint64
            eligible:
              type: boolean
              format: boolean
          title: >-
            Market maker object created by applying, if included through
            `MarketMakerProposal`, eligible becomes true and is

            deleted if rejected or excluded
      pagination:
        description: pagination defines the pagination in the response.
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
    description: >-
      QueryMarketMakersResponse is the response type for the Query/MarketMakers
      RPC method.
  crescent.marketmaker.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          incentive_budget_address:
            type: string
            title: Address containing the funds used to distribute incentives
          deposit_amount:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: >-
              The amount of deposit to be applied to the market maker, which is
              calculated per pair and is refunded when the

              market maker included or rejected through the MarketMaker Proposal
          common:
            title: Common variables used in market maker scoring system
            type: object
            properties:
              min_open_ratio:
                type: string
                title: Minimum ratio to maintain the tick order
              min_open_depth_ratio:
                type: string
                title: Minimum ratio of open amount to MinDepth
              max_downtime:
                type: integer
                format: int64
                title: Maximum allowable consecutive blocks of outage
              max_total_downtime:
                type: integer
                format: int64
                title: Maximum allowable sum of blocks in an hour
              min_hours:
                type: integer
                format: int64
                title: Minimum value of LiveHour to achieve LiveDay
              min_days:
                type: integer
                format: int64
                title: Minimum value of LiveDay to maintain MM eligibility
          incentive_pairs:
            type: array
            items:
              type: object
              properties:
                pair_id:
                  type: string
                  format: uint64
                  title: Pair id of liquidity module
                update_time:
                  type: string
                  format: date-time
                  title: >-
                    Time the pair variables start to be applied to the scoring
                    system
                incentive_weight:
                  type: string
                  title: Incentive weights for each pair
                max_spread:
                  type: string
                  title: Maximum allowable spread between bid and ask
                min_width:
                  type: string
                  title: >-
                    Minimum allowable price difference of high and low on both
                    side of orders
                min_depth:
                  type: string
                  title: Minimum allowable order depth on each side
            title: >-
              Include the pairs that are incentive target pairs and the
              variables used in market maker scoring system
        description: Params defines the set of params for the marketmaker module.
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
  crescent.lpfarm.v1beta1.Farm:
    type: object
    properties:
      total_farming_amount:
        type: string
      current_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      outstanding_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      period:
        type: string
        format: uint64
      previous_share:
        type: string
  crescent.lpfarm.v1beta1.HistoricalRewardsResponse:
    type: object
    properties:
      period:
        type: string
        format: uint64
      cumulative_unit_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      reference_count:
        type: integer
        format: int64
  crescent.lpfarm.v1beta1.Params:
    type: object
    properties:
      private_plan_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      fee_collector:
        type: string
      max_num_private_plans:
        type: integer
        format: int64
      max_block_duration:
        type: string
  crescent.lpfarm.v1beta1.Plan:
    type: object
    properties:
      id:
        type: string
        format: uint64
      description:
        type: string
      farming_pool_address:
        type: string
      termination_address:
        type: string
      reward_allocations:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            pair_id:
              type: string
              format: uint64
            rewards_per_day:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      is_private:
        type: boolean
        format: boolean
      is_terminated:
        type: boolean
        format: boolean
  crescent.lpfarm.v1beta1.Position:
    type: object
    properties:
      farmer:
        type: string
      denom:
        type: string
      farming_amount:
        type: string
      previous_period:
        type: string
        format: uint64
      starting_block_height:
        type: string
        format: int64
  crescent.lpfarm.v1beta1.QueryFarmResponse:
    type: object
    properties:
      farm:
        type: object
        properties:
          total_farming_amount:
            type: string
          current_rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          outstanding_rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          period:
            type: string
            format: uint64
          previous_share:
            type: string
  crescent.lpfarm.v1beta1.QueryHistoricalRewardsResponse:
    type: object
    properties:
      historical_rewards:
        type: array
        items:
          type: object
          properties:
            period:
              type: string
              format: uint64
            cumulative_unit_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            reference_count:
              type: integer
              format: int64
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.lpfarm.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          private_plan_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          fee_collector:
            type: string
          max_num_private_plans:
            type: integer
            format: int64
          max_block_duration:
            type: string
  crescent.lpfarm.v1beta1.QueryPlanResponse:
    type: object
    properties:
      plan:
        type: object
        properties:
          id:
            type: string
            format: uint64
          description:
            type: string
          farming_pool_address:
            type: string
          termination_address:
            type: string
          reward_allocations:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                pair_id:
                  type: string
                  format: uint64
                rewards_per_day:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
          start_time:
            type: string
            format: date-time
          end_time:
            type: string
            format: date-time
          is_private:
            type: boolean
            format: boolean
          is_terminated:
            type: boolean
            format: boolean
  crescent.lpfarm.v1beta1.QueryPlansResponse:
    type: object
    properties:
      plans:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            description:
              type: string
            farming_pool_address:
              type: string
            termination_address:
              type: string
            reward_allocations:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  pair_id:
                    type: string
                    format: uint64
                  rewards_per_day:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            is_private:
              type: boolean
              format: boolean
            is_terminated:
              type: boolean
              format: boolean
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.lpfarm.v1beta1.QueryPositionResponse:
    type: object
    properties:
      position:
        type: object
        properties:
          farmer:
            type: string
          denom:
            type: string
          farming_amount:
            type: string
          previous_period:
            type: string
            format: uint64
          starting_block_height:
            type: string
            format: int64
  crescent.lpfarm.v1beta1.QueryPositionsResponse:
    type: object
    properties:
      positions:
        type: array
        items:
          type: object
          properties:
            farmer:
              type: string
            denom:
              type: string
            farming_amount:
              type: string
            previous_period:
              type: string
              format: uint64
            starting_block_height:
              type: string
              format: int64
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.lpfarm.v1beta1.QueryRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
  crescent.lpfarm.v1beta1.QueryTotalRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
  crescent.lpfarm.v1beta1.RewardAllocation:
    type: object
    properties:
      denom:
        type: string
      pair_id:
        type: string
        format: uint64
      rewards_per_day:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.liquidfarming.v1beta1.AuctionStatus:
    type: string
    enum:
      - AUCTION_STATUS_UNSPECIFIED
      - AUCTION_STATUS_STARTED
      - AUCTION_STATUS_FINISHED
      - AUCTION_STATUS_SKIPPED
    default: AUCTION_STATUS_UNSPECIFIED
    description: |-
      AuctionStatus enumerates the valid status of an auction.

       - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
       - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
       - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
       - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
  crescent.liquidfarming.v1beta1.Bid:
    type: object
    properties:
      pool_id:
        type: string
        format: uint64
        title: pool_id specifies the pool id
      bidder:
        type: string
        title: >-
          bidder specifies the bech32-encoded address that places a bid for the
          auction
      amount:
        title: amount specifies the amount to place a bid
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: Bid defines standard bid for a rewards auction.
  crescent.liquidfarming.v1beta1.ExchangeRateResponse:
    type: object
    properties:
      mint_rate:
        type: string
      burn_rate:
        type: string
  crescent.liquidfarming.v1beta1.LiquidFarm:
    type: object
    properties:
      pool_id:
        type: string
        format: uint64
      min_farm_amount:
        type: string
      min_bid_amount:
        type: string
      fee_rate:
        type: string
    description: >-
      LiquidFarm defines liquid farm object that provides auto compounding
      functionality

      for the liquidity pool and undergoes farming rewards auction process.

      See the technical spec for more detailed information.
  crescent.liquidfarming.v1beta1.LiquidFarmResponse:
    type: object
    properties:
      pool_id:
        type: string
        format: uint64
      liquid_farm_reserve_address:
        type: string
      lf_coin_denom:
        type: string
      lf_coin_supply:
        type: string
      pool_coin_denom:
        type: string
      pool_coin_farming_amount:
        type: string
      min_farm_amount:
        type: string
      min_bid_amount:
        type: string
    description: LiquidFarmResponse is response type for the Query/LiquidFarm RPC method.
  crescent.liquidfarming.v1beta1.Params:
    type: object
    properties:
      fee_collector:
        type: string
      rewards_auction_duration:
        type: string
      liquid_farms:
        type: array
        items:
          type: object
          properties:
            pool_id:
              type: string
              format: uint64
            min_farm_amount:
              type: string
            min_bid_amount:
              type: string
            fee_rate:
              type: string
          description: >-
            LiquidFarm defines liquid farm object that provides auto compounding
            functionality

            for the liquidity pool and undergoes farming rewards auction
            process.

            See the technical spec for more detailed information.
    description: Params defines the parameters for the module.
  crescent.liquidfarming.v1beta1.QueryBidsResponse:
    type: object
    properties:
      bids:
        type: array
        items:
          type: object
          properties:
            pool_id:
              type: string
              format: uint64
              title: pool_id specifies the pool id
            bidder:
              type: string
              title: >-
                bidder specifies the bech32-encoded address that places a bid
                for the auction
            amount:
              title: amount specifies the amount to place a bid
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: Bid defines standard bid for a rewards auction.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryBidsResponse is response type for the Query/Bids RPC method.
  crescent.liquidfarming.v1beta1.QueryExchangeRateResponse:
    type: object
    properties:
      exchange_rate:
        type: object
        properties:
          mint_rate:
            type: string
          burn_rate:
            type: string
    description: >-
      QueryExchangeRateResponse is response type for the Query/ExchangeRate RPC
      method.
  crescent.liquidfarming.v1beta1.QueryLiquidFarmResponse:
    type: object
    properties:
      liquid_farm:
        type: object
        properties:
          pool_id:
            type: string
            format: uint64
          liquid_farm_reserve_address:
            type: string
          lf_coin_denom:
            type: string
          lf_coin_supply:
            type: string
          pool_coin_denom:
            type: string
          pool_coin_farming_amount:
            type: string
          min_farm_amount:
            type: string
          min_bid_amount:
            type: string
        description: >-
          LiquidFarmResponse is response type for the Query/LiquidFarm RPC
          method.
    description: >-
      QueryLiquidFarmResponse is response type for the Query/LiquidFarm RPC
      method.
  crescent.liquidfarming.v1beta1.QueryLiquidFarmsResponse:
    type: object
    properties:
      liquid_farms:
        type: array
        items:
          type: object
          properties:
            pool_id:
              type: string
              format: uint64
            liquid_farm_reserve_address:
              type: string
            lf_coin_denom:
              type: string
            lf_coin_supply:
              type: string
            pool_coin_denom:
              type: string
            pool_coin_farming_amount:
              type: string
            min_farm_amount:
              type: string
            min_bid_amount:
              type: string
          description: >-
            LiquidFarmResponse is response type for the Query/LiquidFarm RPC
            method.
    description: >-
      QueryLiquidFarmsResponse is response type for the Query/LiquidFarms RPC
      method.
  crescent.liquidfarming.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          fee_collector:
            type: string
          rewards_auction_duration:
            type: string
          liquid_farms:
            type: array
            items:
              type: object
              properties:
                pool_id:
                  type: string
                  format: uint64
                min_farm_amount:
                  type: string
                min_bid_amount:
                  type: string
                fee_rate:
                  type: string
              description: >-
                LiquidFarm defines liquid farm object that provides auto
                compounding functionality

                for the liquidity pool and undergoes farming rewards auction
                process.

                See the technical spec for more detailed information.
        description: Params defines the parameters for the module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  crescent.liquidfarming.v1beta1.QueryRewardsAuctionResponse:
    type: object
    properties:
      rewards_auction:
        type: object
        properties:
          id:
            type: string
            format: uint64
            title: id specifies the unique auction id
          pool_id:
            type: string
            format: uint64
            title: pool_id specifies the liquidity pool id
          bidding_coin_denom:
            type: string
            title: bidding_coin_denom specifies the bidding coin denomination
          paying_reserve_address:
            type: string
            title: >-
              paying_reserve_address specfies the account that reserves bidding
              amounts placed by bidders
          start_time:
            type: string
            format: date-time
            title: start_time specifies the start time of an auction
          end_time:
            type: string
            format: date-time
            title: end_time specifies the end time of an auction
          status:
            title: status specifies the status of an auction
            type: string
            enum:
              - AUCTION_STATUS_UNSPECIFIED
              - AUCTION_STATUS_STARTED
              - AUCTION_STATUS_FINISHED
              - AUCTION_STATUS_SKIPPED
            default: AUCTION_STATUS_UNSPECIFIED
            description: |-
              AuctionStatus enumerates the valid status of an auction.

               - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
               - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
               - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
               - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
          winner:
            type: string
            title: |-
              winner specifies the bidder who won the auction
              the value is determined when an auction is finished
          winning_amount:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: winning_amount specifies the winning amount for the uaction
          rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: >-
              rewards specifies the farming rewards for are accumulated in the
              farm module

              the value is determined when an auction is finished
          fees:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          fee_rate:
            type: string
        description: |-
          RewardsAuction defines rewards auction that is created by the module
          for every rewards_auction_duration in params.
    description: >-
      QueryRewardsAuctionResponse is response type for the Query/RewardsAuction
      RPC method.
  crescent.liquidfarming.v1beta1.QueryRewardsAuctionsResponse:
    type: object
    properties:
      rewards_auctions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
              title: id specifies the unique auction id
            pool_id:
              type: string
              format: uint64
              title: pool_id specifies the liquidity pool id
            bidding_coin_denom:
              type: string
              title: bidding_coin_denom specifies the bidding coin denomination
            paying_reserve_address:
              type: string
              title: >-
                paying_reserve_address specfies the account that reserves
                bidding amounts placed by bidders
            start_time:
              type: string
              format: date-time
              title: start_time specifies the start time of an auction
            end_time:
              type: string
              format: date-time
              title: end_time specifies the end time of an auction
            status:
              title: status specifies the status of an auction
              type: string
              enum:
                - AUCTION_STATUS_UNSPECIFIED
                - AUCTION_STATUS_STARTED
                - AUCTION_STATUS_FINISHED
                - AUCTION_STATUS_SKIPPED
              default: AUCTION_STATUS_UNSPECIFIED
              description: |-
                AuctionStatus enumerates the valid status of an auction.

                 - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                 - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                 - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                 - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
            winner:
              type: string
              title: |-
                winner specifies the bidder who won the auction
                the value is determined when an auction is finished
            winning_amount:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: winning_amount specifies the winning amount for the uaction
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: >-
                rewards specifies the farming rewards for are accumulated in the
                farm module

                the value is determined when an auction is finished
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            fee_rate:
              type: string
          description: |-
            RewardsAuction defines rewards auction that is created by the module
            for every rewards_auction_duration in params.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryRewardsAuctionsResponse is response type for the
      Query/RewardsAuctions RPC method.
  crescent.liquidfarming.v1beta1.QueryRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: QueryRewardsResponse is response type for the Query/Rewards RPC method.
  crescent.liquidfarming.v1beta1.RewardsAuction:
    type: object
    properties:
      id:
        type: string
        format: uint64
        title: id specifies the unique auction id
      pool_id:
        type: string
        format: uint64
        title: pool_id specifies the liquidity pool id
      bidding_coin_denom:
        type: string
        title: bidding_coin_denom specifies the bidding coin denomination
      paying_reserve_address:
        type: string
        title: >-
          paying_reserve_address specfies the account that reserves bidding
          amounts placed by bidders
      start_time:
        type: string
        format: date-time
        title: start_time specifies the start time of an auction
      end_time:
        type: string
        format: date-time
        title: end_time specifies the end time of an auction
      status:
        title: status specifies the status of an auction
        type: string
        enum:
          - AUCTION_STATUS_UNSPECIFIED
          - AUCTION_STATUS_STARTED
          - AUCTION_STATUS_FINISHED
          - AUCTION_STATUS_SKIPPED
        default: AUCTION_STATUS_UNSPECIFIED
        description: |-
          AuctionStatus enumerates the valid status of an auction.

           - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
           - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
           - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
           - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
      winner:
        type: string
        title: |-
          winner specifies the bidder who won the auction
          the value is determined when an auction is finished
      winning_amount:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: winning_amount specifies the winning amount for the uaction
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: >-
          rewards specifies the farming rewards for are accumulated in the farm
          module

          the value is determined when an auction is finished
      fees:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      fee_rate:
        type: string
    description: |-
      RewardsAuction defines rewards auction that is created by the module
      for every rewards_auction_duration in params.
  crescent.liquidamm.v1beta1.AuctionStatus:
    type: string
    enum:
      - AUCTION_STATUS_UNSPECIFIED
      - AUCTION_STATUS_STARTED
      - AUCTION_STATUS_FINISHED
      - AUCTION_STATUS_SKIPPED
    default: AUCTION_STATUS_UNSPECIFIED
    description: |-
      AuctionStatus enumerates the valid status of an auction.

       - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
       - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
       - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
       - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
  crescent.liquidamm.v1beta1.Bid:
    type: object
    properties:
      public_position_id:
        type: string
        format: uint64
        title: public_position_id specifies the public position's id
      rewards_auction_id:
        type: string
        format: uint64
        title: rewards_auction_id specifies the reward auction's id
      bidder:
        type: string
        title: >-
          bidder specifies the bech32-encoded address that places a bid for the
          auction
      share:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        title: share specifies the share amount to place a bid
    description: Bid defines standard bid for a rewards auction.
  crescent.liquidamm.v1beta1.Params:
    type: object
    properties:
      rewards_auction_duration:
        type: string
      max_num_recent_rewards_auctions:
        type: integer
        format: int64
    description: Params defines the parameters for the module.
  crescent.liquidamm.v1beta1.PublicPositionResponse:
    type: object
    properties:
      id:
        type: string
        format: uint64
      pool_id:
        type: string
        format: uint64
      lower_tick:
        type: integer
        format: int32
      upper_tick:
        type: integer
        format: int32
      bid_reserve_address:
        type: string
        title: >-
          bid_reserve_address specifies the account that reserves bidding
          amounts placed by bidders
      min_bid_amount:
        type: string
      fee_rate:
        type: string
      last_rewards_auction_id:
        type: string
        format: uint64
      liquidity:
        type: string
      position_id:
        type: string
        format: uint64
      total_share:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
    description: >-
      PublicPositionResponse is response type for the Query/PublicPosition RPC
      method.
  crescent.liquidamm.v1beta1.QueryBidsResponse:
    type: object
    properties:
      bids:
        type: array
        items:
          type: object
          properties:
            public_position_id:
              type: string
              format: uint64
              title: public_position_id specifies the public position's id
            rewards_auction_id:
              type: string
              format: uint64
              title: rewards_auction_id specifies the reward auction's id
            bidder:
              type: string
              title: >-
                bidder specifies the bech32-encoded address that places a bid
                for the auction
            share:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              title: share specifies the share amount to place a bid
          description: Bid defines standard bid for a rewards auction.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: QueryBidsResponse is response type for the Query/Bids RPC method.
  crescent.liquidamm.v1beta1.QueryExchangeRateResponse:
    type: object
    properties:
      mint_rate:
        type: string
      burn_rate:
        type: string
    description: >-
      QueryExchangeRateResponse is response type for the Query/ExchangeRate RPC
      method.
  crescent.liquidamm.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          rewards_auction_duration:
            type: string
          max_num_recent_rewards_auctions:
            type: integer
            format: int64
        description: Params defines the parameters for the module.
    description: QueryParamsResponse is response type for the Query/Params RPC method.
  crescent.liquidamm.v1beta1.QueryPublicPositionResponse:
    type: object
    properties:
      public_position:
        type: object
        properties:
          id:
            type: string
            format: uint64
          pool_id:
            type: string
            format: uint64
          lower_tick:
            type: integer
            format: int32
          upper_tick:
            type: integer
            format: int32
          bid_reserve_address:
            type: string
            title: >-
              bid_reserve_address specifies the account that reserves bidding
              amounts placed by bidders
          min_bid_amount:
            type: string
          fee_rate:
            type: string
          last_rewards_auction_id:
            type: string
            format: uint64
          liquidity:
            type: string
          position_id:
            type: string
            format: uint64
          total_share:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
        description: >-
          PublicPositionResponse is response type for the Query/PublicPosition
          RPC method.
    description: >-
      QueryPublicPositionResponse is response type for the Query/PublicPosition
      RPC method.
  crescent.liquidamm.v1beta1.QueryPublicPositionsResponse:
    type: object
    properties:
      public_positions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            pool_id:
              type: string
              format: uint64
            lower_tick:
              type: integer
              format: int32
            upper_tick:
              type: integer
              format: int32
            bid_reserve_address:
              type: string
              title: >-
                bid_reserve_address specifies the account that reserves bidding
                amounts placed by bidders
            min_bid_amount:
              type: string
            fee_rate:
              type: string
            last_rewards_auction_id:
              type: string
              format: uint64
            liquidity:
              type: string
            position_id:
              type: string
              format: uint64
            total_share:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          description: >-
            PublicPositionResponse is response type for the Query/PublicPosition
            RPC method.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryPublicPositionsResponse is response type for the
      Query/PublicPositions RPC method.
  crescent.liquidamm.v1beta1.QueryRewardsAuctionResponse:
    type: object
    properties:
      rewards_auction:
        type: object
        properties:
          public_position_id:
            type: string
            format: uint64
            description: public_position_id specifies the public position's id.
          id:
            type: string
            format: uint64
            title: id specifies the unique auction id in the public position
          start_time:
            type: string
            format: date-time
            title: start_time specifies the start time of an auction
          end_time:
            type: string
            format: date-time
            title: end_time specifies the end time of an auction
          status:
            title: status specifies the status of an auction
            type: string
            enum:
              - AUCTION_STATUS_UNSPECIFIED
              - AUCTION_STATUS_STARTED
              - AUCTION_STATUS_FINISHED
              - AUCTION_STATUS_SKIPPED
            default: AUCTION_STATUS_UNSPECIFIED
            description: |-
              AuctionStatus enumerates the valid status of an auction.

               - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
               - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
               - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
               - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
          winning_bid:
            title: winning_bid specifies the winning bid
            type: object
            properties:
              public_position_id:
                type: string
                format: uint64
                title: public_position_id specifies the public position's id
              rewards_auction_id:
                type: string
                format: uint64
                title: rewards_auction_id specifies the reward auction's id
              bidder:
                type: string
                title: >-
                  bidder specifies the bech32-encoded address that places a bid
                  for the auction
              share:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                title: share specifies the share amount to place a bid
            description: Bid defines standard bid for a rewards auction.
          rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            title: |-
              rewards specifies the rewards the winning bidder has received
              the value is determined when an auction is finished
          fees:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
        description: |-
          RewardsAuction defines rewards auction that is created by the module
          for every rewards_auction_duration in params.
    description: >-
      QueryRewardsAuctionResponse is response type for the Query/RewardsAuction
      RPC method.
  crescent.liquidamm.v1beta1.QueryRewardsAuctionsResponse:
    type: object
    properties:
      rewards_auctions:
        type: array
        items:
          type: object
          properties:
            public_position_id:
              type: string
              format: uint64
              description: public_position_id specifies the public position's id.
            id:
              type: string
              format: uint64
              title: id specifies the unique auction id in the public position
            start_time:
              type: string
              format: date-time
              title: start_time specifies the start time of an auction
            end_time:
              type: string
              format: date-time
              title: end_time specifies the end time of an auction
            status:
              title: status specifies the status of an auction
              type: string
              enum:
                - AUCTION_STATUS_UNSPECIFIED
                - AUCTION_STATUS_STARTED
                - AUCTION_STATUS_FINISHED
                - AUCTION_STATUS_SKIPPED
              default: AUCTION_STATUS_UNSPECIFIED
              description: |-
                AuctionStatus enumerates the valid status of an auction.

                 - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
                 - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
                 - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
                 - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
            winning_bid:
              title: winning_bid specifies the winning bid
              type: object
              properties:
                public_position_id:
                  type: string
                  format: uint64
                  title: public_position_id specifies the public position's id
                rewards_auction_id:
                  type: string
                  format: uint64
                  title: rewards_auction_id specifies the reward auction's id
                bidder:
                  type: string
                  title: >-
                    bidder specifies the bech32-encoded address that places a
                    bid for the auction
                share:
                  type: object
                  properties:
                    denom:
                      type: string
                    amount:
                      type: string
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  title: share specifies the share amount to place a bid
              description: Bid defines standard bid for a rewards auction.
            rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
              title: |-
                rewards specifies the rewards the winning bidder has received
                the value is determined when an auction is finished
            fees:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
          description: |-
            RewardsAuction defines rewards auction that is created by the module
            for every rewards_auction_duration in params.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
    description: >-
      QueryRewardsAuctionsResponse is response type for the
      Query/RewardsAuctions RPC method.
  crescent.liquidamm.v1beta1.QueryRewardsResponse:
    type: object
    properties:
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: QueryRewardsResponse is response type for the Query/Rewards RPC method.
  crescent.liquidamm.v1beta1.RewardsAuction:
    type: object
    properties:
      public_position_id:
        type: string
        format: uint64
        description: public_position_id specifies the public position's id.
      id:
        type: string
        format: uint64
        title: id specifies the unique auction id in the public position
      start_time:
        type: string
        format: date-time
        title: start_time specifies the start time of an auction
      end_time:
        type: string
        format: date-time
        title: end_time specifies the end time of an auction
      status:
        title: status specifies the status of an auction
        type: string
        enum:
          - AUCTION_STATUS_UNSPECIFIED
          - AUCTION_STATUS_STARTED
          - AUCTION_STATUS_FINISHED
          - AUCTION_STATUS_SKIPPED
        default: AUCTION_STATUS_UNSPECIFIED
        description: |-
          AuctionStatus enumerates the valid status of an auction.

           - AUCTION_STATUS_UNSPECIFIED: AUCTION_STATUS_UNSPECIFIED defines the default auction status
           - AUCTION_STATUS_STARTED: AUCTION_STATUS_STARTED defines the started auction status
           - AUCTION_STATUS_FINISHED: AUCTION_STATUS_FINISHED defines the finished auction status
           - AUCTION_STATUS_SKIPPED: AUCTION_STATUS_SKIPPED defines the skipped auction status
      winning_bid:
        title: winning_bid specifies the winning bid
        type: object
        properties:
          public_position_id:
            type: string
            format: uint64
            title: public_position_id specifies the public position's id
          rewards_auction_id:
            type: string
            format: uint64
            title: rewards_auction_id specifies the reward auction's id
          bidder:
            type: string
            title: >-
              bidder specifies the bech32-encoded address that places a bid for
              the auction
          share:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            title: share specifies the share amount to place a bid
        description: Bid defines standard bid for a rewards auction.
      rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
        title: |-
          rewards specifies the rewards the winning bidder has received
          the value is determined when an auction is finished
      fees:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
    description: |-
      RewardsAuction defines rewards auction that is created by the module
      for every rewards_auction_duration in params.
  crescent.marker.v1beta1.Params:
    type: object
  crescent.marker.v1beta1.QueryLastBlockTimeResponse:
    type: object
    properties:
      last_block_time:
        type: string
        format: date-time
  crescent.marker.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
  crescent.exchange.v1beta1.AmountLimits:
    type: object
    properties:
      min:
        type: string
      max:
        type: string
  crescent.exchange.v1beta1.Fees:
    type: object
    properties:
      maker_fee_rate:
        type: string
      taker_fee_rate:
        type: string
      order_source_fee_ratio:
        type: string
  crescent.exchange.v1beta1.MarketResponse:
    type: object
    properties:
      id:
        type: string
        format: uint64
      base_denom:
        type: string
      quote_denom:
        type: string
      escrow_address:
        type: string
      fee_collector:
        type: string
      fees:
        type: object
        properties:
          maker_fee_rate:
            type: string
          taker_fee_rate:
            type: string
          order_source_fee_ratio:
            type: string
      order_quantity_limits:
        type: object
        properties:
          min:
            type: string
          max:
            type: string
      order_quote_limits:
        type: object
        properties:
          min:
            type: string
          max:
            type: string
      last_price:
        type: string
      last_matching_height:
        type: string
        format: int64
  crescent.exchange.v1beta1.Order:
    type: object
    properties:
      id:
        type: string
        format: uint64
      type:
        type: string
        enum:
          - ORDER_TYPE_UNSPECIFIED
          - ORDER_TYPE_LIMIT
          - ORDER_TYPE_MM
        default: ORDER_TYPE_UNSPECIFIED
      orderer:
        type: string
      market_id:
        type: string
        format: uint64
      is_buy:
        type: boolean
        format: boolean
      price:
        type: string
      quantity:
        type: string
      msg_height:
        type: string
        format: int64
      open_quantity:
        type: string
      remaining_deposit:
        type: string
      deadline:
        type: string
        format: date-time
  crescent.exchange.v1beta1.OrderBook:
    type: object
    properties:
      price_interval:
        type: string
      sells:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: p denotes price
            q:
              type: string
              title: q denotes quantity
      buys:
        type: array
        items:
          type: object
          properties:
            p:
              type: string
              title: p denotes price
            q:
              type: string
              title: q denotes quantity
  crescent.exchange.v1beta1.OrderBookPriceLevel:
    type: object
    properties:
      p:
        type: string
        title: p denotes price
      q:
        type: string
        title: q denotes quantity
  crescent.exchange.v1beta1.OrderType:
    type: string
    enum:
      - ORDER_TYPE_UNSPECIFIED
      - ORDER_TYPE_LIMIT
      - ORDER_TYPE_MM
    default: ORDER_TYPE_UNSPECIFIED
  crescent.exchange.v1beta1.Params:
    type: object
    properties:
      market_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      default_fees:
        type: object
        properties:
          maker_fee_rate:
            type: string
          taker_fee_rate:
            type: string
          order_source_fee_ratio:
            type: string
      max_order_lifespan:
        type: string
      max_order_price_ratio:
        type: string
        title: >-
          max_order_price_ratio defines the ratio of the maximum possible order
          price compared to the market's last price
      default_order_quantity_limits:
        type: object
        properties:
          min:
            type: string
          max:
            type: string
      default_order_quote_limits:
        type: object
        properties:
          min:
            type: string
          max:
            type: string
      max_swap_routes_len:
        type: integer
        format: int64
      max_num_mm_orders:
        type: integer
        format: int64
  crescent.exchange.v1beta1.QueryAllMarketsResponse:
    type: object
    properties:
      markets:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            base_denom:
              type: string
            quote_denom:
              type: string
            escrow_address:
              type: string
            fee_collector:
              type: string
            fees:
              type: object
              properties:
                maker_fee_rate:
                  type: string
                taker_fee_rate:
                  type: string
                order_source_fee_ratio:
                  type: string
            order_quantity_limits:
              type: object
              properties:
                min:
                  type: string
                max:
                  type: string
            order_quote_limits:
              type: object
              properties:
                min:
                  type: string
                max:
                  type: string
            last_price:
              type: string
            last_matching_height:
              type: string
              format: int64
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.exchange.v1beta1.QueryAllOrdersResponse:
    type: object
    properties:
      orders:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            type:
              type: string
              enum:
                - ORDER_TYPE_UNSPECIFIED
                - ORDER_TYPE_LIMIT
                - ORDER_TYPE_MM
              default: ORDER_TYPE_UNSPECIFIED
            orderer:
              type: string
            market_id:
              type: string
              format: uint64
            is_buy:
              type: boolean
              format: boolean
            price:
              type: string
            quantity:
              type: string
            msg_height:
              type: string
              format: int64
            open_quantity:
              type: string
            remaining_deposit:
              type: string
            deadline:
              type: string
              format: date-time
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.exchange.v1beta1.QueryBestSwapExactAmountInRoutesResponse:
    type: object
    properties:
      routes:
        type: array
        items:
          type: string
          format: uint64
      output:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      results:
        type: array
        items:
          type: object
          properties:
            market_id:
              type: string
              format: uint64
            executed_quantity:
              type: string
            input:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            paid:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            received:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            fee_paid:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            fee_received:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
  crescent.exchange.v1beta1.QueryMarketResponse:
    type: object
    properties:
      market:
        type: object
        properties:
          id:
            type: string
            format: uint64
          base_denom:
            type: string
          quote_denom:
            type: string
          escrow_address:
            type: string
          fee_collector:
            type: string
          fees:
            type: object
            properties:
              maker_fee_rate:
                type: string
              taker_fee_rate:
                type: string
              order_source_fee_ratio:
                type: string
          order_quantity_limits:
            type: object
            properties:
              min:
                type: string
              max:
                type: string
          order_quote_limits:
            type: object
            properties:
              min:
                type: string
              max:
                type: string
          last_price:
            type: string
          last_matching_height:
            type: string
            format: int64
  crescent.exchange.v1beta1.QueryOrderBookResponse:
    type: object
    properties:
      order_books:
        type: array
        items:
          type: object
          properties:
            price_interval:
              type: string
            sells:
              type: array
              items:
                type: object
                properties:
                  p:
                    type: string
                    title: p denotes price
                  q:
                    type: string
                    title: q denotes quantity
            buys:
              type: array
              items:
                type: object
                properties:
                  p:
                    type: string
                    title: p denotes price
                  q:
                    type: string
                    title: q denotes quantity
  crescent.exchange.v1beta1.QueryOrderResponse:
    type: object
    properties:
      order:
        type: object
        properties:
          id:
            type: string
            format: uint64
          type:
            type: string
            enum:
              - ORDER_TYPE_UNSPECIFIED
              - ORDER_TYPE_LIMIT
              - ORDER_TYPE_MM
            default: ORDER_TYPE_UNSPECIFIED
          orderer:
            type: string
          market_id:
            type: string
            format: uint64
          is_buy:
            type: boolean
            format: boolean
          price:
            type: string
          quantity:
            type: string
          msg_height:
            type: string
            format: int64
          open_quantity:
            type: string
          remaining_deposit:
            type: string
          deadline:
            type: string
            format: date-time
  crescent.exchange.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          market_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          default_fees:
            type: object
            properties:
              maker_fee_rate:
                type: string
              taker_fee_rate:
                type: string
              order_source_fee_ratio:
                type: string
          max_order_lifespan:
            type: string
          max_order_price_ratio:
            type: string
            title: >-
              max_order_price_ratio defines the ratio of the maximum possible
              order price compared to the market's last price
          default_order_quantity_limits:
            type: object
            properties:
              min:
                type: string
              max:
                type: string
          default_order_quote_limits:
            type: object
            properties:
              min:
                type: string
              max:
                type: string
          max_swap_routes_len:
            type: integer
            format: int64
          max_num_mm_orders:
            type: integer
            format: int64
  crescent.exchange.v1beta1.SwapRouteResult:
    type: object
    properties:
      market_id:
        type: string
        format: uint64
      executed_quantity:
        type: string
      input:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      paid:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      received:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      fee_paid:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      fee_received:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  crescent.amm.v1beta1.FarmingPlan:
    type: object
    properties:
      id:
        type: string
        format: uint64
      description:
        type: string
      farming_pool_address:
        type: string
      termination_address:
        type: string
      reward_allocations:
        type: array
        items:
          type: object
          properties:
            pool_id:
              type: string
              format: uint64
            rewards_per_day:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
      start_time:
        type: string
        format: date-time
      end_time:
        type: string
        format: date-time
      is_private:
        type: boolean
        format: boolean
      is_terminated:
        type: boolean
        format: boolean
  crescent.amm.v1beta1.FarmingRewardAllocation:
    type: object
    properties:
      pool_id:
        type: string
        format: uint64
      rewards_per_day:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.Params:
    type: object
    properties:
      pool_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      default_tick_spacing:
        type: integer
        format: int64
      private_farming_plan_creation_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      max_num_private_farming_plans:
        type: integer
        format: int64
      max_farming_block_time:
        type: string
  crescent.amm.v1beta1.PoolResponse:
    type: object
    properties:
      id:
        type: string
        format: uint64
      market_id:
        type: string
        format: uint64
      balance0:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      balance1:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      reserve_address:
        type: string
      rewards_pool:
        type: string
      tick_spacing:
        type: integer
        format: int64
      current_tick:
        type: integer
        format: int32
      current_price:
        type: string
      current_liquidity:
        type: string
      total_liquidity:
        type: string
      fee_growth_global:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      farming_rewards_growth_global:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.PositionResponse:
    type: object
    properties:
      id:
        type: string
        format: uint64
      pool_id:
        type: string
        format: uint64
      owner:
        type: string
      lower_price:
        type: string
      upper_price:
        type: string
      liquidity:
        type: string
      last_fee_growth_inside:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      owed_fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      last_farming_rewards_growth_inside:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      owed_farming_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.QueryAddLiquiditySimulationResponse:
    type: object
    properties:
      liquidity:
        type: string
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.QueryAllFarmingPlansResponse:
    type: object
    properties:
      farming_plans:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            description:
              type: string
            farming_pool_address:
              type: string
            termination_address:
              type: string
            reward_allocations:
              type: array
              items:
                type: object
                properties:
                  pool_id:
                    type: string
                    format: uint64
                  rewards_per_day:
                    type: array
                    items:
                      type: object
                      properties:
                        denom:
                          type: string
                        amount:
                          type: string
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
            start_time:
              type: string
              format: date-time
            end_time:
              type: string
              format: date-time
            is_private:
              type: boolean
              format: boolean
            is_terminated:
              type: boolean
              format: boolean
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.amm.v1beta1.QueryAllPoolsResponse:
    type: object
    properties:
      pools:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            market_id:
              type: string
              format: uint64
            balance0:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            balance1:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
            reserve_address:
              type: string
            rewards_pool:
              type: string
            tick_spacing:
              type: integer
              format: int64
            current_tick:
              type: integer
              format: int32
            current_price:
              type: string
            current_liquidity:
              type: string
            total_liquidity:
              type: string
            fee_growth_global:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            farming_rewards_growth_global:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.amm.v1beta1.QueryAllPositionsResponse:
    type: object
    properties:
      positions:
        type: array
        items:
          type: object
          properties:
            id:
              type: string
              format: uint64
            pool_id:
              type: string
              format: uint64
            owner:
              type: string
            lower_price:
              type: string
            upper_price:
              type: string
            liquidity:
              type: string
            last_fee_growth_inside:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            owed_fee:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
            last_farming_rewards_growth_inside:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            owed_farming_rewards:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.amm.v1beta1.QueryAllTickInfosResponse:
    type: object
    properties:
      tick_infos:
        type: array
        items:
          type: object
          properties:
            tick:
              type: integer
              format: int32
            gross_liquidity:
              type: string
            net_liquidity:
              type: string
            fee_growth_outside:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
            farming_rewards_growth_outside:
              type: array
              items:
                type: object
                properties:
                  denom:
                    type: string
                  amount:
                    type: string
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
      pagination:
        type: object
        properties:
          next_key:
            type: string
            format: byte
            title: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently
          total:
            type: string
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
  crescent.amm.v1beta1.QueryCollectibleCoinsResponse:
    type: object
    properties:
      fee:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
      farming_rewards:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.QueryFarmingPlanResponse:
    type: object
    properties:
      farming_plan:
        type: object
        properties:
          id:
            type: string
            format: uint64
          description:
            type: string
          farming_pool_address:
            type: string
          termination_address:
            type: string
          reward_allocations:
            type: array
            items:
              type: object
              properties:
                pool_id:
                  type: string
                  format: uint64
                rewards_per_day:
                  type: array
                  items:
                    type: object
                    properties:
                      denom:
                        type: string
                      amount:
                        type: string
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
          start_time:
            type: string
            format: date-time
          end_time:
            type: string
            format: date-time
          is_private:
            type: boolean
            format: boolean
          is_terminated:
            type: boolean
            format: boolean
  crescent.amm.v1beta1.QueryParamsResponse:
    type: object
    properties:
      params:
        type: object
        properties:
          pool_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          default_tick_spacing:
            type: integer
            format: int64
          private_farming_plan_creation_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          max_num_private_farming_plans:
            type: integer
            format: int64
          max_farming_block_time:
            type: string
  crescent.amm.v1beta1.QueryPoolResponse:
    type: object
    properties:
      pool:
        type: object
        properties:
          id:
            type: string
            format: uint64
          market_id:
            type: string
            format: uint64
          balance0:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          balance1:
            type: object
            properties:
              denom:
                type: string
              amount:
                type: string
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
          reserve_address:
            type: string
          rewards_pool:
            type: string
          tick_spacing:
            type: integer
            format: int64
          current_tick:
            type: integer
            format: int32
          current_price:
            type: string
          current_liquidity:
            type: string
          total_liquidity:
            type: string
          fee_growth_global:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          farming_rewards_growth_global:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
  crescent.amm.v1beta1.QueryPositionAssetsResponse:
    type: object
    properties:
      coin0:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
      coin1:
        type: object
        properties:
          denom:
            type: string
          amount:
            type: string
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
  crescent.amm.v1beta1.QueryPositionResponse:
    type: object
    properties:
      position:
        type: object
        properties:
          id:
            type: string
            format: uint64
          pool_id:
            type: string
            format: uint64
          owner:
            type: string
          lower_price:
            type: string
          upper_price:
            type: string
          liquidity:
            type: string
          last_fee_growth_inside:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          owed_fee:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
          last_farming_rewards_growth_inside:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          owed_farming_rewards:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
  crescent.amm.v1beta1.QueryRemoveLiquiditySimulationResponse:
    type: object
    properties:
      amount:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
  crescent.amm.v1beta1.QueryTickInfoResponse:
    type: object
    properties:
      tick_info:
        type: object
        properties:
          tick:
            type: integer
            format: int32
          gross_liquidity:
            type: string
          net_liquidity:
            type: string
          fee_growth_outside:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
          farming_rewards_growth_outside:
            type: array
            items:
              type: object
              properties:
                denom:
                  type: string
                amount:
                  type: string
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
  crescent.amm.v1beta1.TickInfoResponse:
    type: object
    properties:
      tick:
        type: integer
        format: int32
      gross_liquidity:
        type: string
      net_liquidity:
        type: string
      fee_growth_outside:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
      farming_rewards_growth_outside:
        type: array
        items:
          type: object
          properties:
            denom:
              type: string
            amount:
              type: string
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
