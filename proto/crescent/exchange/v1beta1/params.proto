syntax = "proto3";

package crescent.exchange.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/duration.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package                      = "github.com/crescent-network/crescent/v5/x/exchange/types";
option (gogoproto.goproto_getters_all) = false;

message Params {
  repeated cosmos.base.v1beta1.Coin market_creation_fee = 1
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
  Fees                     default_fees       = 2 [(gogoproto.nullable) = false];
  google.protobuf.Duration max_order_lifespan = 3 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
  // max_order_price_ratio defines the ratio of the maximum possible order price compared to the market's last price
  string max_order_price_ratio = 4
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  AmountLimits default_order_quantity_limits = 5 [(gogoproto.nullable) = false];
  AmountLimits default_order_quote_limits    = 6 [(gogoproto.nullable) = false];
  uint32       max_swap_routes_len           = 7;
  uint32       max_num_mm_orders             = 8 [(gogoproto.customname) = "MaxNumMMOrders"];
}

message Fees {
  string maker_fee_rate = 1
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string taker_fee_rate = 2
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string order_source_fee_ratio = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}

message AmountLimits {
  string min = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string max = 2 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}