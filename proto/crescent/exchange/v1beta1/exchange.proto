syntax = "proto3";

package crescent.exchange.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package                      = "github.com/crescent-network/crescent/v5/x/exchange/types";
option (gogoproto.goproto_getters_all) = false;

message Market {
  uint64 id             = 1;
  string base_denom     = 2;
  string quote_denom    = 3;
  string escrow_address = 4;
  string fee_collector  = 5;
  string maker_fee_rate = 6
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string taker_fee_rate = 7
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string order_source_fee_ratio = 8
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string min_order_quantity = 9
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string min_order_quote = 10
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string max_order_quantity = 11
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string max_order_quote = 12
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
}

message MarketState {
  string last_price           = 1 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
  int64  last_matching_height = 2;
}

message Order {
  uint64    id        = 1;
  OrderType type      = 2;
  string    orderer   = 3;
  uint64    market_id = 4;
  bool      is_buy    = 5;
  string    price = 6 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
  string quantity = 7 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  int64  msg_height    = 8;
  string open_quantity = 9
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  string remaining_deposit = 10
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  google.protobuf.Timestamp deadline = 11 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
}

enum OrderType {
  option (gogoproto.goproto_enum_prefix) = false;
  ORDER_TYPE_UNSPECIFIED                 = 0 [(gogoproto.enumvalue_customname) = "OrderTypeUnspecified"];
  ORDER_TYPE_LIMIT                       = 1 [(gogoproto.enumvalue_customname) = "OrderTypeLimit"];
  ORDER_TYPE_MM                          = 2 [(gogoproto.enumvalue_customname) = "OrderTypeMM"];
}

message SwapRouteResult {
  uint64 market_id         = 1;
  string executed_quantity = 2
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin input  = 3 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin output = 4 [(gogoproto.nullable) = false];
  cosmos.base.v1beta1.Coin fee    = 5 [(gogoproto.nullable) = false];
}
