syntax = "proto3";

package crescent.lpfarm.v1beta1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

option go_package                      = "github.com/crescent-network/crescent/v4/x/lpfarm/types";
option (gogoproto.goproto_getters_all) = false;

message Params {
  repeated cosmos.base.v1beta1.Coin private_plan_creation_fee = 1
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
  string                   fee_collector         = 2;
  uint32                   max_num_private_plans = 3;
  google.protobuf.Duration max_block_duration    = 4 [(gogoproto.stdduration) = true, (gogoproto.nullable) = false];
}

message Plan {
  uint64                    id                   = 1;
  string                    description          = 2;
  string                    farming_pool_address = 3;
  string                    termination_address  = 4;
  repeated RewardAllocation reward_allocations   = 5 [(gogoproto.nullable) = false];
  google.protobuf.Timestamp start_time           = 6 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  google.protobuf.Timestamp end_time             = 7 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false];
  bool                      is_private           = 8;
  bool                      is_terminated        = 9;
}

message RewardAllocation {
  string   denom                                    = 1;
  uint64   pair_id                                  = 2;
  repeated cosmos.base.v1beta1.Coin rewards_per_day = 3
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins", (gogoproto.nullable) = false];
}

message Farm {
  string total_farming_amount = 1
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  repeated cosmos.base.v1beta1.DecCoin current_rewards = 2
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.nullable) = false];
  repeated cosmos.base.v1beta1.DecCoin outstanding_rewards = 3
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.nullable) = false];
  uint64 period         = 4;
  string previous_share = 5 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"];
}

message Position {
  string farmer         = 1;
  string denom          = 2;
  string farming_amount = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];
  uint64 previous_period       = 4;
  int64  starting_block_height = 5;
}

message HistoricalRewards {
  repeated cosmos.base.v1beta1.DecCoin cumulative_unit_rewards = 1
      [(gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins", (gogoproto.nullable) = false];
  uint32 reference_count = 2;
}
